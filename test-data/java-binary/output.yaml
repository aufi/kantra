name: azure/springboot
description: Recommend OpenFeign instead of Feign.
violations: []
tags: null
name: camel3
description: Rules for changes between Camel 3.0 and Camel 4.0
violations: []
tags: null
name: camel3/camel2
description: Rules for changes in XML file (e.g. pom.xml) to run on Apache Camel 3
violations: []
tags: null
name: cloud-readiness
description: This ruleset detects logging configurations that may be problematic when migrating an application to a cloud environment.
violations:
  local-storage-00001:
    description: File system - Java IO
    category: mandatory
    labels:
      - konveyor.io/source
      - konveyor.io/target=cloud-readiness
      - storage
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
        message: |-
          An application running inside a container could lose access to a file in local storage.

           Recommendations

           The following recommendations depend on the function of the file in local storage:

           * Logging: Log to standard output and use a centralized log collector to analyze the logs.
           * Caching: Use a cache backing service.
           * Configuration: Store configuration settings in environment variables so that they can be updated without code changes.
           * Data storage: Use a database backing service for relational data or use a persistent data storage system.
           * Temporary data storage: Use the file system of a running container as a brief, single-transaction cache.
        codeSnip: "133  \n134        return new MediaPath(cachedFileName, true, mediaType);\n135     }\n136  \n137     private MediaPath createCachedMedia(MediaItem mediaItem) {\n138        return this.createCachedMedia(mediaItem.getUrl(), mediaItem.getMediaType());\n139     }\n140  \n141     private OutputStream getCachedOutputStream(String fileName) {\n142        try {\n143           return new FileOutputStream(this.getCachedFile(fileName));\n144        } catch (FileNotFoundException var3) {\n145           throw new IllegalStateException(\"Error creating cached file\", var3);\n146        }\n147     }\n148  \n149     static {\n150        String dataDir = System.getenv(\"OPENSHIFT_DATA_DIR\");\n151        String parentDir = dataDir != null ? dataDir : System.getProperty(\"java.io.tmpdir\");\n152        tmpDir = new File(parentDir, \"org.jboss.jdf.examples.ticket-monster\");\n153        if (tmpDir.exists()) {"
        lineNumber: 143
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: getCachedOutputStream
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
        message: |-
          An application running inside a container could lose access to a file in local storage.

           Recommendations

           The following recommendations depend on the function of the file in local storage:

           * Logging: Log to standard output and use a centralized log collector to analyze the logs.
           * Caching: Use a cache backing service.
           * Configuration: Store configuration settings in environment variables so that they can be updated without code changes.
           * Data storage: Use a database backing service for relational data or use a persistent data storage system.
           * Temporary data storage: Use the file system of a running container as a brief, single-transaction cache.
        codeSnip: "19  import org.jboss.examples.ticketmonster.model.MediaType;\n20  import org.jboss.examples.ticketmonster.util.Base64;\n21  import org.jboss.examples.ticketmonster.util.Reflections;\n22  \n23  @RequestScoped\n24  public class MediaManager {\n25     private static final File tmpDir;\n26     private final Map cache = new HashMap();\n27  \n28     public File getCachedFile(String fileName) {\n29        return new File(tmpDir, fileName);\n30     }\n31  \n32     public MediaPath getPath(MediaItem mediaItem) {\n33        if (this.cache.containsKey(mediaItem)) {\n34           return (MediaPath)this.cache.get(mediaItem);\n35        } else {\n36           MediaPath mediaPath = this.createPath(mediaItem);\n37           this.cache.put(mediaItem, mediaPath);\n38           return mediaPath;\n39        }"
        lineNumber: 29
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: getCachedFile
          package: org.jboss.examples.ticketmonster.service
    links:
      - url: https://docs.openshift.com/container-platform/4.5/builds/creating-build-inputs.html#builds-input-secrets-configmaps_creating-build-inputs
        title: 'OpenShift Container Platform: Input secrets and ConfigMaps'
      - url: https://docs.openshift.com/container-platform/4.5/logging/cluster-logging.html
        title: 'OpenShift Container Platform: Understanding cluster logging'
      - url: https://docs.openshift.com/container-platform/4.5/storage/understanding-persistent-storage.html
        title: 'OpenShift Container Platform: Understanding persistent storage'
      - url: https://12factor.net/backing-services
        title: 'Twelve-Factor App: Backing services'
      - url: https://12factor.net/config
        title: 'Twelve-Factor App: Config'
      - url: https://12factor.net/logs
        title: 'Twelve-Factor App: Logs'
    effort: 1
  local-storage-00002:
    description: File system - java.net.URL/URI
    category: mandatory
    labels:
      - konveyor.io/source
      - konveyor.io/target=cloud-readiness
      - storage
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
        message: |-
          An application running inside a container could lose access to a file in local storage.

           Recommendations

           The following recommendations depend on the function of the file in local storage:

           * Logging: Log to standard output and use a centralized log collector to analyze the logs.
           * Caching: Use a cache backing service.
           * Configuration: Store configuration settings in environment variables so that they can be updated without code changes.
           * Data storage: Use a database backing service for relational data or use a persistent data storage system.
           * Temporary data storage: Use the file system of a running container as a brief, single-transaction cache.
        codeSnip: " 88           return false;\n 89        }\n 90     }\n 91  \n 92     private MediaPath createCachedMedia(String url, MediaType mediaType) {\n 93        String cachedFileName = this.getCachedFileName(url);\n 94        if (!this.alreadyCached(cachedFileName)) {\n 95           URL _url = null;\n 96  \n 97           try {\n 98              _url = new URL(url);\n 99           } catch (MalformedURLException var12) {\n100              throw new IllegalStateException(\"Error reading URL \" + url);\n101           }\n102  \n103           try {\n104              InputStream is = null;\n105              OutputStream os = null;\n106  \n107              try {\n108                 is = new BufferedInputStream(_url.openStream());"
        lineNumber: 98
        variables:
          class: ""
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: createCachedMedia
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
        message: |-
          An application running inside a container could lose access to a file in local storage.

           Recommendations

           The following recommendations depend on the function of the file in local storage:

           * Logging: Log to standard output and use a centralized log collector to analyze the logs.
           * Caching: Use a cache backing service.
           * Configuration: Store configuration settings in environment variables so that they can be updated without code changes.
           * Data storage: Use a database backing service for relational data or use a persistent data storage system.
           * Temporary data storage: Use the file system of a running container as a brief, single-transaction cache.
        codeSnip: "46           return this.checkResourceAvailable(mediaItem) ? new MediaPath(mediaItem.getUrl(), false, mediaItem.getMediaType()) : this.createCachedMedia(Reflections.getResource(\"not_available.jpg\").toExternalForm(), MediaType.IMAGE);\n47        } else {\n48           return this.createCachedMedia(mediaItem);\n49        }\n50     }\n51  \n52     private boolean checkResourceAvailable(MediaItem mediaItem) {\n53        URL url = null;\n54  \n55        try {\n56           url = new URL(mediaItem.getUrl());\n57        } catch (MalformedURLException var4) {\n58        }\n59  \n60        if (url != null) {\n61           try {\n62              URLConnection connection = url.openConnection();\n63              if (connection instanceof HttpURLConnection) {\n64                 return ((HttpURLConnection)connection).getResponseCode() == 200;\n65              }\n66  "
        lineNumber: 56
        variables:
          class: ""
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
          kind: Constructor
          name: checkResourceAvailable
          package: org.jboss.examples.ticketmonster.service
    links:
      - url: https://docs.openshift.com/container-platform/4.5/builds/creating-build-inputs.html#builds-input-secrets-configmaps_creating-build-inputs
        title: 'OpenShift Container Platform: Input secrets and ConfigMaps'
      - url: https://docs.openshift.com/container-platform/4.5/logging/cluster-logging.html
        title: 'OpenShift Container Platform: Understanding cluster logging'
      - url: https://docs.openshift.com/container-platform/4.5/storage/understanding-persistent-storage.html
        title: 'OpenShift Container Platform: Understanding persistent storage'
      - url: https://12factor.net/backing-services
        title: 'Twelve-Factor App: Backing services'
      - url: https://12factor.net/config
        title: 'Twelve-Factor App: Config'
      - url: https://12factor.net/logs
        title: 'Twelve-Factor App: Logs'
    effort: 1
tags: null
name: discovery-rules
tags:
  - EJB XML
  - JPA XML
  - Java Source
  - Manifest
  - Maven XML
  - Properties
  - Spring XML
  - Web XML
insights:
  discover-java-files:
    description: Java source files
    labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=Java Source
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/AirportCodeMapping.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/Booking.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/BookingPK.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/Customer.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/CustomerAddress.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/CustomerSession.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/Flight.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/FlightPK.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/FlightSegment.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/jpa/service/BookingServiceImpl.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/jpa/service/CustomerServiceImpl.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/jpa/service/DefaultKeyGeneratorImpl.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/jpa/service/FlightServiceImpl.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/service/BookingService.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/service/CustomerService.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/service/FlightService.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/service/KeyGenerator.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/BookingInfo.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/BookingsREST.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/CustomerREST.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/FlightsREST.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoaderREST.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoginREST.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/ServiceLocator.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/TripFlightOptions.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/TripLegInfo.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/config/WXSDirectAppConfig.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Address.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Address_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Booking_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Event_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/MediaType.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Performance_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/SeatAllocationException.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Seat_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Section_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Show_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Ticket_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Venue_.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingRequest.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BotState.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/JaxRsActivator.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceMetric.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ReaderExceptionMapper.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/RestServiceException.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionComparator.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowMetric.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketRequest.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/AddressDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/BookingDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/EventDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/MediaItemDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedEventDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedMediaItemDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedPerformanceDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedSectionDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedShowDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedTicketPriceDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/NestedVenueDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/PerformanceDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SeatDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionAllocationDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/SectionDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/ShowDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketCategoryDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/TicketPriceDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/dto/VenueDTO.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/AllocatedSeats.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/MediaManager.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/MediaPath.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/Base64.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/CircularBuffer.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/ForwardingMap.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/MultivaluedHashMap.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/Reflections.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
        message: ""
  discover-manifest-file:
    description: Manifest file
    labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=Manifest
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/META-INF/MANIFEST.MF
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-common-1.0-SNAPSHOT-decompiled/acmeair-common-1-0-SNAPSHOT-jar-exploded/META-INF/MANIFEST.MF
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-services-1.0-SNAPSHOT-decompiled/acmeair-services-1-0-SNAPSHOT-jar-exploded/META-INF/MANIFEST.MF
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-services-jpa-1.0-SNAPSHOT-decompiled/acmeair-services-jpa-1-0-SNAPSHOT-jar-exploded/META-INF/MANIFEST.MF
        message: ""
  discover-maven-xml:
    description: Maven XML file
    labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=Maven XML
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-common-1.0-SNAPSHOT-decompiled/acmeair-common-1-0-SNAPSHOT-jar-exploded/META-INF/maven/net.wasdev.wlp.sample/acmeair-common/pom.xml
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-services-1.0-SNAPSHOT-decompiled/acmeair-services-1-0-SNAPSHOT-jar-exploded/META-INF/maven/net.wasdev.wlp.sample/acmeair-services/pom.xml
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-services-jpa-1.0-SNAPSHOT-decompiled/acmeair-services-jpa-1-0-SNAPSHOT-jar-exploded/META-INF/maven/net.wasdev.wlp.sample/acmeair-services-jpa/pom.xml
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/pom.xml
        message: ""
  discover-properties-file:
    description: Properties file
    labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=Properties
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-common-1.0-SNAPSHOT-decompiled/acmeair-common-1-0-SNAPSHOT-jar-exploded/META-INF/maven/net.wasdev.wlp.sample/acmeair-common/pom.properties
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-services-1.0-SNAPSHOT-decompiled/acmeair-services-1-0-SNAPSHOT-jar-exploded/META-INF/maven/net.wasdev.wlp.sample/acmeair-services/pom.properties
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-services-jpa-1.0-SNAPSHOT-decompiled/acmeair-services-jpa-1-0-SNAPSHOT-jar-exploded/META-INF/maven/net.wasdev.wlp.sample/acmeair-services-jpa/pom.properties
        message: ""
  windup-discover-ejb-configuration:
    description: EJB XML Configuration
    labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=EJB XML
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <persistence version=\"2.0\"\n  3               xmlns=\"http://java.sun.com/xml/ns/persistence\"\n  4               xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  5               xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n  6  \n  7    <persistence-unit name=\"acmeairunit\" >\n  8  \n  9      <jta-data-source>java:comp/env/jdbc/acmeairdatasource</jta-data-source>\n 10  \n 11      <class>com.acmeair.entities.Customer</class>\n 12      <class>com.acmeair.entities.CustomerSession</class>\n 13      <class>com.acmeair.entities.CustomerAddress</class>\n 14      <class>com.acmeair.entities.Flight</class>\n 15      <class>com.acmeair.entities.FlightPK</class>\n 16      <class>com.acmeair.entities.FlightSegment</class>\n 17      <class>com.acmeair.entities.AirportCodeMapping</class>\n 18      <class>com.acmeair.entities.Booking</class>\n 19      <class>com.acmeair.entities.BookingPK</class>\n 20  \n 21      <exclude-unlisted-classes>true</exclude-unlisted-classes>\n 22      <properties>\n 23        <!-- These properties are creating the database on the fly. We are using them to avoid users having\n 24            to create a database to run the sample. \n 25            See also the create=true line in the datasource meta data. -->\n 26        <property name=\"openjpa.jdbc.SynchronizeMappings\"\n 27                  value=\"buildSchema(ForeignKeys=true)\" />\n 28      </properties>\n 29    </persistence-unit>\n 30  \n 31  </persistence>\n"
        lineNumber: 9
        variables:
          data: ""
          innerText: "\n\n\n  \n\n    java:comp/env/jdbc/acmeairdatasource\n\n    com.acmeair.entities.Customer\n    com.acmeair.entities.CustomerSession\n    com.acmeair.entities.CustomerAddress\n    com.acmeair.entities.Flight\n    com.acmeair.entities.FlightPK\n    com.acmeair.entities.FlightSegment\n    com.acmeair.entities.AirportCodeMapping\n    com.acmeair.entities.Booking\n    com.acmeair.entities.BookingPK\n\n    true\n    \n      \n      \n    \n  \n\n\n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><persistence version=\"2.0\" xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\"><persistence-unit name=\"acmeairunit\"><jta-data-source>java:comp/env/jdbc/acmeairdatasource</jta-data-source><class>com.acmeair.entities.Customer</class><class>com.acmeair.entities.CustomerSession</class><class>com.acmeair.entities.CustomerAddress</class><class>com.acmeair.entities.Flight</class><class>com.acmeair.entities.FlightPK</class><class>com.acmeair.entities.FlightSegment</class><class>com.acmeair.entities.AirportCodeMapping</class><class>com.acmeair.entities.Booking</class><class>com.acmeair.entities.BookingPK</class><exclude-unlisted-classes>true</exclude-unlisted-classes><properties><!-- These properties are creating the database on the fly. We are using them to avoid users having\n          to create a database to run the sample. \n          See also the create=true line in the datasource meta data. --><property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\"></property></properties></persistence-unit></persistence>"
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-common-1.0-SNAPSHOT-decompiled/acmeair-common-1-0-SNAPSHOT-jar-exploded/META-INF/maven/net.wasdev.wlp.sample/acmeair-common/pom.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\"?>\n  2  <!-- ***************************************************************************\n  3  * Copyright (c) 2013 IBM Corp.\n  4  *\n  5  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  6  * you may not use this file except in compliance with the License.\n  7  * You may obtain a copy of the License at\n  8  *\n  9  *    http://www.apache.org/licenses/LICENSE-2.0\n 10  *\n 11  * Unless required by applicable law or agreed to in writing, software\n 12  * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14  * See the License for the specific language governing permissions and\n 15  * limitations under the License.\n 16  **************************************************************************** -->\n 17  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n 18      <modelVersion>4.0.0</modelVersion>\n 19      \n 20      <parent>\n 21          <groupId>net.wasdev.wlp.sample</groupId>\n 22          <artifactId>acmeair</artifactId>\n 23          <version>1.0-SNAPSHOT</version>\n 24      </parent>\n 25      \n 26      <artifactId>acmeair-common</artifactId>\n 27      <packaging>jar</packaging>\n 28      <name>acmeair-common</name>\n 29      \n 30      <dependencies>\n 31          <dependency>\n 32              <groupId>org.apache.geronimo.specs</groupId>\n 33              <artifactId>geronimo-jpa_2.0_spec</artifactId>\n 34          </dependency>\n 35      </dependencies>\n 36  </project>\n"
        lineNumber: 18
        variables:
          data: ""
          innerText: "\n\n\n    4.0.0\n    \n    \n        net.wasdev.wlp.sample\n        acmeair\n        1.0-SNAPSHOT\n    \n    \n    acmeair-common\n    jar\n    acmeair-common\n    \n    \n        \n            org.apache.geronimo.specs\n            geronimo-jpa_2.0_spec\n        \n    \n\n"
          matchingXML: |-
            <?xml version="1.0"?><!-- ***************************************************************************
            * Copyright (c) 2013 IBM Corp.
            *
            * Licensed under the Apache License, Version 2.0 (the "License");
            * you may not use this file except in compliance with the License.
            * You may obtain a copy of the License at
            *
            *    http://www.apache.org/licenses/LICENSE-2.0
            *
            * Unless required by applicable law or agreed to in writing, software
            * distributed under the License is distributed on an "AS IS" BASIS,
            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
            * See the License for the specific language governing permissions and
            * limitations under the License.
            **************************************************************************** --><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"><modelVersion>4.0.0</modelVersion><parent><groupId>net.wasdev.wlp.sample</groupId><artifactId>acmeair</artifactId><version>1.0-SNAPSHOT</version></parent><artifactId>acmeair-common</artifactId><packaging>jar</packaging><name>acmeair-common</name><dependencies><dependency><groupId>org.apache.geronimo.specs</groupId><artifactId>geronimo-jpa_2.0_spec</artifactId></dependency></dependencies></project>
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-services-1.0-SNAPSHOT-decompiled/acmeair-services-1-0-SNAPSHOT-jar-exploded/META-INF/maven/net.wasdev.wlp.sample/acmeair-services/pom.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\"?>\n  2  <!-- ***************************************************************************\n  3  * Copyright (c) 2013 IBM Corp.\n  4  *\n  5  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  6  * you may not use this file except in compliance with the License.\n  7  * You may obtain a copy of the License at\n  8  *\n  9  *    http://www.apache.org/licenses/LICENSE-2.0\n 10  *\n 11  * Unless required by applicable law or agreed to in writing, software\n 12  * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14  * See the License for the specific language governing permissions and\n 15  * limitations under the License.\n 16  **************************************************************************** -->\n 17  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n 18      <modelVersion>4.0.0</modelVersion>\n 19      \n 20      <parent>\n 21          <groupId>net.wasdev.wlp.sample</groupId>\n 22          <artifactId>acmeair</artifactId>\n 23          <version>1.0-SNAPSHOT</version>\n 24      </parent>\n 25      \n 26      <artifactId>acmeair-services</artifactId>\n 27      <name>acmeair-services</name>\n 28      \n 29      <dependencies>\n 30          <dependency>\n 31              <groupId>net.wasdev.wlp.sample</groupId>\n 32              <artifactId>acmeair-common</artifactId>\n 33              <version>${project.version}</version>\n 34          </dependency>\n 35      </dependencies>\n 36  </project>\n"
        lineNumber: 18
        variables:
          data: ""
          innerText: "\n\n\n    4.0.0\n    \n    \n        net.wasdev.wlp.sample\n        acmeair\n        1.0-SNAPSHOT\n    \n    \n    acmeair-services\n    acmeair-services\n    \n    \n        \n            net.wasdev.wlp.sample\n            acmeair-common\n            ${project.version}\n        \n    \n\n"
          matchingXML: |-
            <?xml version="1.0"?><!-- ***************************************************************************
            * Copyright (c) 2013 IBM Corp.
            *
            * Licensed under the Apache License, Version 2.0 (the "License");
            * you may not use this file except in compliance with the License.
            * You may obtain a copy of the License at
            *
            *    http://www.apache.org/licenses/LICENSE-2.0
            *
            * Unless required by applicable law or agreed to in writing, software
            * distributed under the License is distributed on an "AS IS" BASIS,
            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
            * See the License for the specific language governing permissions and
            * limitations under the License.
            **************************************************************************** --><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"><modelVersion>4.0.0</modelVersion><parent><groupId>net.wasdev.wlp.sample</groupId><artifactId>acmeair</artifactId><version>1.0-SNAPSHOT</version></parent><artifactId>acmeair-services</artifactId><name>acmeair-services</name><dependencies><dependency><groupId>net.wasdev.wlp.sample</groupId><artifactId>acmeair-common</artifactId><version>${project.version}</version></dependency></dependencies></project>
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-services-jpa-1.0-SNAPSHOT-decompiled/acmeair-services-jpa-1-0-SNAPSHOT-jar-exploded/META-INF/maven/net.wasdev.wlp.sample/acmeair-services-jpa/pom.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\"?>\n  2  <!-- ***************************************************************************\n  3  * Copyright (c) 2013 IBM Corp.\n  4  *\n  5  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  6  * you may not use this file except in compliance with the License.\n  7  * You may obtain a copy of the License at\n  8  *\n  9  *    http://www.apache.org/licenses/LICENSE-2.0\n 10  *\n 11  * Unless required by applicable law or agreed to in writing, software\n 12  * distributed under the License is distributed on an \"AS IS\" BASIS,\n 13  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 14  * See the License for the specific language governing permissions and\n 15  * limitations under the License.\n 16  **************************************************************************** -->\n 17  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n 18      <modelVersion>4.0.0</modelVersion>\n 19      \n 20      <parent>\n 21          <artifactId>acmeair</artifactId>\n 22          <groupId>net.wasdev.wlp.sample</groupId>\n 23          <version>1.0-SNAPSHOT</version>\n 24      </parent>\n 25      \n 26      <artifactId>acmeair-services-jpa</artifactId>\n 27      <name>acmeair-services-jpa</name>\n 28      \n 29      <dependencies>\n 30          <dependency>\n 31              <groupId>net.wasdev.wlp.sample</groupId>\n 32              <artifactId>acmeair-common</artifactId>\n 33              <version>${project.version}</version>\n 34          </dependency>\n 35          <dependency>\n 36              <groupId>net.wasdev.wlp.sample</groupId>\n 37              <artifactId>acmeair-services</artifactId>\n 38              <version>${project.version}</version>\n 39          </dependency>\n 40          <dependency>\n 41              <groupId>org.springframework</groupId>\n 42              <artifactId>spring-context</artifactId>\n 43              <version>${spring.version}</version>\n 44          </dependency>\n 45          <dependency>\n 46              <groupId>org.springframework</groupId>\n 47              <artifactId>spring-tx</artifactId>\n 48              <version>${spring.version}</version>\n 49          </dependency>\n 50      </dependencies>\n 51  </project>\n"
        lineNumber: 18
        variables:
          data: ""
          innerText: "\n\n\n    4.0.0\n    \n    \n        acmeair\n        net.wasdev.wlp.sample\n        1.0-SNAPSHOT\n    \n    \n    acmeair-services-jpa\n    acmeair-services-jpa\n    \n    \n        \n            net.wasdev.wlp.sample\n            acmeair-common\n            ${project.version}\n        \n        \n            net.wasdev.wlp.sample\n            acmeair-services\n            ${project.version}\n        \n        \n            org.springframework\n            spring-context\n            ${spring.version}\n        \n        \n            org.springframework\n            spring-tx\n            ${spring.version}\n        \n    \n\n"
          matchingXML: |-
            <?xml version="1.0"?><!-- ***************************************************************************
            * Copyright (c) 2013 IBM Corp.
            *
            * Licensed under the Apache License, Version 2.0 (the "License");
            * you may not use this file except in compliance with the License.
            * You may obtain a copy of the License at
            *
            *    http://www.apache.org/licenses/LICENSE-2.0
            *
            * Unless required by applicable law or agreed to in writing, software
            * distributed under the License is distributed on an "AS IS" BASIS,
            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
            * See the License for the specific language governing permissions and
            * limitations under the License.
            **************************************************************************** --><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"><modelVersion>4.0.0</modelVersion><parent><artifactId>acmeair</artifactId><groupId>net.wasdev.wlp.sample</groupId><version>1.0-SNAPSHOT</version></parent><artifactId>acmeair-services-jpa</artifactId><name>acmeair-services-jpa</name><dependencies><dependency><groupId>net.wasdev.wlp.sample</groupId><artifactId>acmeair-common</artifactId><version>${project.version}</version></dependency><dependency><groupId>net.wasdev.wlp.sample</groupId><artifactId>acmeair-services</artifactId><version>${project.version}</version></dependency><dependency><groupId>org.springframework</groupId><artifactId>spring-context</artifactId><version>${spring.version}</version></dependency><dependency><groupId>org.springframework</groupId><artifactId>spring-tx</artifactId><version>${spring.version}</version></dependency></dependencies></project>
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-services-jpa-1.0-SNAPSHOT-decompiled/acmeair-services-jpa-1-0-SNAPSHOT-jar-exploded/spring-config-acmeair-data-jpa.xml
        message: ""
        variables:
          data: ""
          innerText: "\n\n\t\n\t\n\n\t  \n\t\n\n"
          matchingXML: "<?xml?><beans xmlns=\"http://www.springframework.org/schema/beans\" default-lazy-init=\"true\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:tx=\"http://www.springframework.org/schema/tx\" xmlns:jee=\"http://www.springframework.org/schema/jee\" xsi:schemaLocation=\"http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd\n           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd\n           http://www.springframework.org/schema/jee  http://www.springframework.org/schema/jee/spring-jee-3.0.xsd\n           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd\n       \t   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd\"><jee:jndi-lookup id=\"emf\" jndi-name=\"java:comp/env/acmeair/emf\" expected-type=\"javax.persistence.EntityManagerFactory\"></jee:jndi-lookup><jee:jndi-lookup id=\"em\" jndi-name=\"java:comp/env/acmeair/em\" expected-type=\"javax.persistence.EntityManager\"></jee:jndi-lookup><tx:jta-transaction-manager></tx:jta-transaction-manager><tx:annotation-driven></tx:annotation-driven></beans>"
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/web.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  3  \txmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:web=\"http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n  4  \txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n  5  \tversion=\"3.0\">\n  6  \t<display-name>scale-webapp</display-name>\n  7  \t<welcome-file-list>\n  8  \t\t<welcome-file>index.html</welcome-file>\n  9  \t\t<welcome-file>index.htm</welcome-file>\n 10  \t\t<welcome-file>index.jsp</welcome-file>\n 11  \t\t<welcome-file>default.html</welcome-file>\n 12  \t\t<welcome-file>default.htm</welcome-file>\n 13  \t\t<welcome-file>default.jsp</welcome-file>\n 14  \t</welcome-file-list>\n 15  \n 16  \t<!-- Configure ContextLoaderListener to use AnnotationConfigWebApplicationContext \n 17  \t\tinstead of the default XmlWebApplicationContext -->\n 18  \t<context-param>\n 19  \t\t<param-name>contextClass</param-name>\n 20  \t\t<param-value>\n 21            org.springframework.web.context.support.AnnotationConfigWebApplicationContext\n 22        </param-value>\n 23  \t</context-param>\n 24  \n 25  \t<!-- Configuration locations must consist of one or more comma- or space-delimited \n 26  \t\tfully-qualified @Configuration classes. Fully-qualified packages may also \n 27  \t\tbe specified for component-scanning -->\n 28  \t<context-param>\n 29  \t\t<param-name>contextConfigLocation</param-name>\n 30  \t\t<param-value>com.acmeair.web.config.WXSDirectAppConfig</param-value>\n 31  \t</context-param>\n 32  \n 33  \t<filter>\n 34      \t<filter-name>CookieFilter</filter-name>\n 35      \t<filter-class>com.acmeair.web.RESTCookieSessionFilter</filter-class>\n 36  \t</filter>\n 37  \t<filter-mapping>\n 38      \t<filter-name>CookieFilter</filter-name>\n 39      \t<url-pattern>/rest/api/*</url-pattern>\n 40  \t</filter-mapping>\n 41  \n 42  \t<!-- Bootstrap the root application context as usual using ContextLoaderListener -->\n 43  \t<listener>\n 44  \t\t<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n 45  \t</listener>\n 46  \t<servlet>\n 47  \t\t<servlet-name>javax.ws.rs.core.Application</servlet-name>\n 48  \t</servlet>\n 49  \t<servlet-mapping>\n 50  \t\t<servlet-name>javax.ws.rs.core.Application</servlet-name>\n 51  \t\t<url-pattern>/rest/api/*</url-pattern>\n 52  \t</servlet-mapping>\n 53  \t\n 54      <persistence-unit-ref>\n 55          <persistence-unit-ref-name>acmeair/emf</persistence-unit-ref-name>\n 56          <persistence-unit-name>acmeairunit</persistence-unit-name>\n 57      </persistence-unit-ref>\n 58      \n 59      <persistence-context-ref>\n 60          <persistence-context-ref-name>acmeair/em</persistence-context-ref-name>\n 61          <persistence-unit-name>acmeairunit</persistence-unit-name>\n 62      </persistence-context-ref>\n 63  </web-app>\n"
        lineNumber: 6
        variables:
          data: ""
          innerText: "\n\n\tscale-webapp\n\t\n\t\tindex.html\n\t\tindex.htm\n\t\tindex.jsp\n\t\tdefault.html\n\t\tdefault.htm\n\t\tdefault.jsp\n\t\n\n\t\n\t\n\t\tcontextClass\n\t\t\n          org.springframework.web.context.support.AnnotationConfigWebApplicationContext\n      \n\t\n\n\t\n\t\n\t\tcontextConfigLocation\n\t\tcom.acmeair.web.config.WXSDirectAppConfig\n\t\n\n\t\n    \tCookieFilter\n    \tcom.acmeair.web.RESTCookieSessionFilter\n\t\n\t\n    \tCookieFilter\n    \t/rest/api/*\n\t\n\n\t\n\t\n\t\torg.springframework.web.context.ContextLoaderListener\n\t\n\t\n\t\tjavax.ws.rs.core.Application\n\t\n\t\n\t\tjavax.ws.rs.core.Application\n\t\t/rest/api/*\n\t\n\t\n    \n        acmeair/emf\n        acmeairunit\n    \n    \n    \n        acmeair/em\n        acmeairunit\n    \n"
          matchingXML: "<?xml version=\"1.0\" encoding=\"UTF-8\"?><web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:web=\"http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\"><display-name>scale-webapp</display-name><welcome-file-list><welcome-file>index.html</welcome-file><welcome-file>index.htm</welcome-file><welcome-file>index.jsp</welcome-file><welcome-file>default.html</welcome-file><welcome-file>default.htm</welcome-file><welcome-file>default.jsp</welcome-file></welcome-file-list><!-- Configure ContextLoaderListener to use AnnotationConfigWebApplicationContext \n\t\tinstead of the default XmlWebApplicationContext --><context-param><param-name>contextClass</param-name><param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value></context-param><!-- Configuration locations must consist of one or more comma- or space-delimited \n\t\tfully-qualified @Configuration classes. Fully-qualified packages may also \n\t\tbe specified for component-scanning --><context-param><param-name>contextConfigLocation</param-name><param-value>com.acmeair.web.config.WXSDirectAppConfig</param-value></context-param><filter><filter-name>CookieFilter</filter-name><filter-class>com.acmeair.web.RESTCookieSessionFilter</filter-class></filter><filter-mapping><filter-name>CookieFilter</filter-name><url-pattern>/rest/api/*</url-pattern></filter-mapping><!-- Bootstrap the root application context as usual using ContextLoaderListener --><listener><listener-class>org.springframework.web.context.ContextLoaderListener</listener-class></listener><servlet><servlet-name>javax.ws.rs.core.Application</servlet-name></servlet><servlet-mapping><servlet-name>javax.ws.rs.core.Application</servlet-name><url-pattern>/rest/api/*</url-pattern></servlet-mapping><persistence-unit-ref><persistence-unit-ref-name>acmeair/emf</persistence-unit-ref-name><persistence-unit-name>acmeairunit</persistence-unit-name></persistence-unit-ref><persistence-context-ref><persistence-context-ref-name>acmeair/em</persistence-context-ref-name><persistence-unit-name>acmeairunit</persistence-unit-name></persistence-context-ref></web-app>"
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/pom.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  3    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  4    <modelVersion>4.0.0</modelVersion>\n  5  \n  6    <groupId>io.konveyor</groupId>\n  7    <artifactId>java-project</artifactId>\n  8    <version>1.0-SNAPSHOT</version>\n  9  \n 10    <name>java-project</name>\n 11    <url>http://www.konveyor.io</url>\n 12  \n 13    <properties>\n 14      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n 15    </properties>\n 16  \n 17    <dependencies>\n 18  \n 19      <dependency>\n 20        <groupId>aopalliance</groupId>\n 21        <artifactId>aopalliance</artifactId>\n 22        <version>1.0</version>\n 23      </dependency>\n 24  \n 25      <dependency>\n 26        <groupId>asm</groupId>\n 27        <artifactId>asm</artifactId>\n 28        <version>3.3.1</version>\n 29      </dependency>\n 30  \n 31      <dependency>\n 32        <groupId>org.aspectj</groupId>\n 33        <artifactId>aspectjrt</artifactId>\n 34        <version>1.6.8</version>\n 35      </dependency>\n 36  \n 37      <dependency>\n 38        <groupId>org.aspectj</groupId>\n 39        <artifactId>aspectjweaver</artifactId>\n 40        <version>1.6.8</version>\n 41      </dependency>\n 42  \n 43      <dependency>\n 44        <groupId>cglib</groupId>\n 45        <artifactId>cglib</artifactId>\n 46        <version>2.2.2</version>\n 47      </dependency>\n 48  \n 49      <dependency>\n 50        <groupId>commons-logging</groupId>\n 51        <artifactId>commons-logging</artifactId>\n 52        <version>1.1.1</version>\n 53      </dependency>\n 54  \n 55      <dependency>\n 56        <groupId>org.springframework</groupId>\n 57        <artifactId>spring-aop</artifactId>\n 58        <version>3.1.2.RELEASE</version>\n 59      </dependency>\n 60  \n 61      <dependency>\n 62        <groupId>org.springframework</groupId>\n 63        <artifactId>spring-asm</artifactId>\n 64        <version>3.1.2.RELEASE</version>\n 65      </dependency>\n 66  \n 67      <dependency>\n 68        <groupId>org.springframework</groupId>\n 69        <artifactId>spring-beans</artifactId>\n 70        <version>3.1.2.RELEASE</version>\n 71      </dependency>\n 72  \n 73      <dependency>\n 74        <groupId>org.springframework</groupId>\n 75        <artifactId>spring-context</artifactId>\n 76        <version>3.1.2.RELEASE</version>\n 77      </dependency>\n 78  \n 79      <dependency>\n 80        <groupId>org.springframework</groupId>\n 81        <artifactId>spring-core</artifactId>\n 82        <version>3.1.2.RELEASE</version>\n 83      </dependency>\n 84  \n 85      <dependency>\n 86        <groupId>org.springframework</groupId>\n 87        <artifactId>spring-expression</artifactId>\n 88        <version>3.1.2.RELEASE</version>\n 89      </dependency>\n 90  \n 91      <dependency>\n 92        <groupId>org.springframework</groupId>\n 93        <artifactId>spring-tx</artifactId>\n 94        <version>3.1.2.RELEASE</version>\n 95      </dependency>\n 96  \n 97      <dependency>\n 98        <groupId>org.springframework</groupId>\n 99        <artifactId>spring-web</artifactId>\n100        <version>3.1.2.RELEASE</version>\n101      </dependency>\n102  \n103    </dependencies>\n104  \n105    <build>"
        lineNumber: 4
        variables:
          data: ""
          innerText: "\n\n  4.0.0\n\n  io.konveyor\n  java-project\n  1.0-SNAPSHOT\n\n  java-project\n  http://www.konveyor.io\n\n  \n    UTF-8\n  \n\n  \n\n    \n      aopalliance\n      aopalliance\n      1.0\n    \n\n    \n      asm\n      asm\n      3.3.1\n    \n\n    \n      org.aspectj\n      aspectjrt\n      1.6.8\n    \n\n    \n      org.aspectj\n      aspectjweaver\n      1.6.8\n    \n\n    \n      cglib\n      cglib\n      2.2.2\n    \n\n    \n      commons-logging\n      commons-logging\n      1.1.1\n    \n\n    \n      org.springframework\n      spring-aop\n      3.1.2.RELEASE\n    \n\n    \n      org.springframework\n      spring-asm\n      3.1.2.RELEASE\n    \n\n    \n      org.springframework\n      spring-beans\n      3.1.2.RELEASE\n    \n\n    \n      org.springframework\n      spring-context\n      3.1.2.RELEASE\n    \n\n    \n      org.springframework\n      spring-core\n      3.1.2.RELEASE\n    \n\n    \n      org.springframework\n      spring-expression\n      3.1.2.RELEASE\n    \n\n    \n      org.springframework\n      spring-tx\n      3.1.2.RELEASE\n    \n\n    \n      org.springframework\n      spring-web\n      3.1.2.RELEASE\n    \n\n  \n\n  \n  \n\n"
          matchingXML: <?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"><modelVersion>4.0.0</modelVersion><groupId>io.konveyor</groupId><artifactId>java-project</artifactId><version>1.0-SNAPSHOT</version><name>java-project</name><url>http://www.konveyor.io</url><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding></properties><dependencies><dependency><groupId>aopalliance</groupId><artifactId>aopalliance</artifactId><version>1.0</version></dependency><dependency><groupId>asm</groupId><artifactId>asm</artifactId><version>3.3.1</version></dependency><dependency><groupId>org.aspectj</groupId><artifactId>aspectjrt</artifactId><version>1.6.8</version></dependency><dependency><groupId>org.aspectj</groupId><artifactId>aspectjweaver</artifactId><version>1.6.8</version></dependency><dependency><groupId>cglib</groupId><artifactId>cglib</artifactId><version>2.2.2</version></dependency><dependency><groupId>commons-logging</groupId><artifactId>commons-logging</artifactId><version>1.1.1</version></dependency><dependency><groupId>org.springframework</groupId><artifactId>spring-aop</artifactId><version>3.1.2.RELEASE</version></dependency><dependency><groupId>org.springframework</groupId><artifactId>spring-asm</artifactId><version>3.1.2.RELEASE</version></dependency><dependency><groupId>org.springframework</groupId><artifactId>spring-beans</artifactId><version>3.1.2.RELEASE</version></dependency><dependency><groupId>org.springframework</groupId><artifactId>spring-context</artifactId><version>3.1.2.RELEASE</version></dependency><dependency><groupId>org.springframework</groupId><artifactId>spring-core</artifactId><version>3.1.2.RELEASE</version></dependency><dependency><groupId>org.springframework</groupId><artifactId>spring-expression</artifactId><version>3.1.2.RELEASE</version></dependency><dependency><groupId>org.springframework</groupId><artifactId>spring-tx</artifactId><version>3.1.2.RELEASE</version></dependency><dependency><groupId>org.springframework</groupId><artifactId>spring-web</artifactId><version>3.1.2.RELEASE</version></dependency></dependencies><build></build></project>
  windup-discover-jpa-configuration:
    description: JPA XML Configuration
    labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=JPA XML
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <persistence version=\"2.0\"\n  3               xmlns=\"http://java.sun.com/xml/ns/persistence\"\n  4               xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  5               xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n  6  \n  7    <persistence-unit name=\"acmeairunit\" >\n  8  \n  9      <jta-data-source>java:comp/env/jdbc/acmeairdatasource</jta-data-source>\n 10  \n 11      <class>com.acmeair.entities.Customer</class>\n 12      <class>com.acmeair.entities.CustomerSession</class>\n 13      <class>com.acmeair.entities.CustomerAddress</class>\n 14      <class>com.acmeair.entities.Flight</class>\n 15      <class>com.acmeair.entities.FlightPK</class>\n 16      <class>com.acmeair.entities.FlightSegment</class>\n 17      <class>com.acmeair.entities.AirportCodeMapping</class>\n 18      <class>com.acmeair.entities.Booking</class>\n 19      <class>com.acmeair.entities.BookingPK</class>\n 20  \n 21      <exclude-unlisted-classes>true</exclude-unlisted-classes>\n 22      <properties>\n 23        <!-- These properties are creating the database on the fly. We are using them to avoid users having\n 24            to create a database to run the sample. \n 25            See also the create=true line in the datasource meta data. -->\n 26        <property name=\"openjpa.jdbc.SynchronizeMappings\"\n 27                  value=\"buildSchema(ForeignKeys=true)\" />\n 28      </properties>\n 29    </persistence-unit>\n 30  \n 31  </persistence>\n"
        lineNumber: 9
        variables:
          data: persistence
          innerText: "\n\n  \n\n    java:comp/env/jdbc/acmeairdatasource\n\n    com.acmeair.entities.Customer\n    com.acmeair.entities.CustomerSession\n    com.acmeair.entities.CustomerAddress\n    com.acmeair.entities.Flight\n    com.acmeair.entities.FlightPK\n    com.acmeair.entities.FlightSegment\n    com.acmeair.entities.AirportCodeMapping\n    com.acmeair.entities.Booking\n    com.acmeair.entities.BookingPK\n\n    true\n    \n      \n      \n    \n  \n\n"
          matchingXML: "<persistence-unit name=\"acmeairunit\"><jta-data-source>java:comp/env/jdbc/acmeairdatasource</jta-data-source><class>com.acmeair.entities.Customer</class><class>com.acmeair.entities.CustomerSession</class><class>com.acmeair.entities.CustomerAddress</class><class>com.acmeair.entities.Flight</class><class>com.acmeair.entities.FlightPK</class><class>com.acmeair.entities.FlightSegment</class><class>com.acmeair.entities.AirportCodeMapping</class><class>com.acmeair.entities.Booking</class><class>com.acmeair.entities.BookingPK</class><exclude-unlisted-classes>true</exclude-unlisted-classes><properties><!-- These properties are creating the database on the fly. We are using them to avoid users having\n          to create a database to run the sample. \n          See also the create=true line in the datasource meta data. --><property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\"></property></properties></persistence-unit>"
  windup-discover-spring-configuration:
    description: Spring XML Configuration
    labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=Spring XML
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/WEB-INF/lib/acmeair-services-jpa-1.0-SNAPSHOT-decompiled/acmeair-services-jpa-1-0-SNAPSHOT-jar-exploded/spring-config-acmeair-data-jpa.xml
        message: ""
        codeSnip: "  1  <!-- ***************************************************************************\n  2  * Copyright (c) 2013 IBM Corp.\n  3  *\n  4  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  5  * you may not use this file except in compliance with the License.\n  6  * You may obtain a copy of the License at\n  7  *\n  8  *    http://www.apache.org/licenses/LICENSE-2.0\n  9  *\n 10  * Unless required by applicable law or agreed to in writing, software\n 11  * distributed under the License is distributed on an \"AS IS\" BASIS,\n 12  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n 13  * See the License for the specific language governing permissions and\n 14  * limitations under the License.\n 15  **************************************************************************** -->\n 16  <beans xmlns=\"http://www.springframework.org/schema/beans\" default-lazy-init=\"true\"\n 17  \txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context=\"http://www.springframework.org/schema/context\"\n 18  \txmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\n 19          xmlns:jee=\"http://www.springframework.org/schema/jee\"\n 20  \txsi:schemaLocation=\"http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd\n 21             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd\n 22             http://www.springframework.org/schema/jee  http://www.springframework.org/schema/jee/spring-jee-3.0.xsd\n 23             http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd\n 24         \t   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd\">\n 25  \n 26  \t<jee:jndi-lookup id=\"emf\" jndi-name=\"java:comp/env/acmeair/emf\" expected-type=\"javax.persistence.EntityManagerFactory\"/>\n 27  \t<jee:jndi-lookup id=\"em\" jndi-name=\"java:comp/env/acmeair/em\" expected-type=\"javax.persistence.EntityManager\"/>\n 28  \n 29  \t<tx:jta-transaction-manager/>  \n 30  \t<tx:annotation-driven/>\n 31  \n 32  </beans>\n"
        lineNumber: 16
        variables:
          data: beans
          innerText: "\n\n\t\n\t\n\n\t  \n\t\n\n"
          matchingXML: <jee:jndi-lookup id="emf" jndi-name="java:comp/env/acmeair/emf" expected-type="javax.persistence.EntityManagerFactory"></jee:jndi-lookup><jee:jndi-lookup id="em" jndi-name="java:comp/env/acmeair/em" expected-type="javax.persistence.EntityManager"></jee:jndi-lookup><tx:jta-transaction-manager></tx:jta-transaction-manager><tx:annotation-driven></tx:annotation-driven>
  windup-discover-web-configuration:
    description: Web XML Configuration
    labels:
      - discovery
      - konveyor.io/include=always
      - konveyor.io/target=discovery
      - tag=Web XML
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/web.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  3  \txmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:web=\"http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n  4  \txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n  5  \tversion=\"3.0\">\n  6  \t<display-name>scale-webapp</display-name>\n  7  \t<welcome-file-list>\n  8  \t\t<welcome-file>index.html</welcome-file>\n  9  \t\t<welcome-file>index.htm</welcome-file>\n 10  \t\t<welcome-file>index.jsp</welcome-file>\n 11  \t\t<welcome-file>default.html</welcome-file>\n 12  \t\t<welcome-file>default.htm</welcome-file>\n 13  \t\t<welcome-file>default.jsp</welcome-file>\n 14  \t</welcome-file-list>\n 15  \n 16  \t<!-- Configure ContextLoaderListener to use AnnotationConfigWebApplicationContext \n 17  \t\tinstead of the default XmlWebApplicationContext -->\n 18  \t<context-param>\n 19  \t\t<param-name>contextClass</param-name>\n 20  \t\t<param-value>\n 21            org.springframework.web.context.support.AnnotationConfigWebApplicationContext\n 22        </param-value>\n 23  \t</context-param>\n 24  \n 25  \t<!-- Configuration locations must consist of one or more comma- or space-delimited \n 26  \t\tfully-qualified @Configuration classes. Fully-qualified packages may also \n 27  \t\tbe specified for component-scanning -->\n 28  \t<context-param>\n 29  \t\t<param-name>contextConfigLocation</param-name>\n 30  \t\t<param-value>com.acmeair.web.config.WXSDirectAppConfig</param-value>\n 31  \t</context-param>\n 32  \n 33  \t<filter>\n 34      \t<filter-name>CookieFilter</filter-name>\n 35      \t<filter-class>com.acmeair.web.RESTCookieSessionFilter</filter-class>\n 36  \t</filter>\n 37  \t<filter-mapping>\n 38      \t<filter-name>CookieFilter</filter-name>\n 39      \t<url-pattern>/rest/api/*</url-pattern>\n 40  \t</filter-mapping>\n 41  \n 42  \t<!-- Bootstrap the root application context as usual using ContextLoaderListener -->\n 43  \t<listener>\n 44  \t\t<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n 45  \t</listener>\n 46  \t<servlet>\n 47  \t\t<servlet-name>javax.ws.rs.core.Application</servlet-name>\n 48  \t</servlet>\n 49  \t<servlet-mapping>\n 50  \t\t<servlet-name>javax.ws.rs.core.Application</servlet-name>\n 51  \t\t<url-pattern>/rest/api/*</url-pattern>\n 52  \t</servlet-mapping>\n 53  \t\n 54      <persistence-unit-ref>\n 55          <persistence-unit-ref-name>acmeair/emf</persistence-unit-ref-name>\n 56          <persistence-unit-name>acmeairunit</persistence-unit-name>\n 57      </persistence-unit-ref>\n 58      \n 59      <persistence-context-ref>\n 60          <persistence-context-ref-name>acmeair/em</persistence-context-ref-name>\n 61          <persistence-unit-name>acmeairunit</persistence-unit-name>\n 62      </persistence-context-ref>\n 63  </web-app>\n"
        lineNumber: 6
        variables:
          data: web-app
          innerText: "\n\tscale-webapp\n\t\n\t\tindex.html\n\t\tindex.htm\n\t\tindex.jsp\n\t\tdefault.html\n\t\tdefault.htm\n\t\tdefault.jsp\n\t\n\n\t\n\t\n\t\tcontextClass\n\t\t\n          org.springframework.web.context.support.AnnotationConfigWebApplicationContext\n      \n\t\n\n\t\n\t\n\t\tcontextConfigLocation\n\t\tcom.acmeair.web.config.WXSDirectAppConfig\n\t\n\n\t\n    \tCookieFilter\n    \tcom.acmeair.web.RESTCookieSessionFilter\n\t\n\t\n    \tCookieFilter\n    \t/rest/api/*\n\t\n\n\t\n\t\n\t\torg.springframework.web.context.ContextLoaderListener\n\t\n\t\n\t\tjavax.ws.rs.core.Application\n\t\n\t\n\t\tjavax.ws.rs.core.Application\n\t\t/rest/api/*\n\t\n\t\n    \n        acmeair/emf\n        acmeairunit\n    \n    \n    \n        acmeair/em\n        acmeairunit\n    \n"
          matchingXML: "<display-name>scale-webapp</display-name><welcome-file-list><welcome-file>index.html</welcome-file><welcome-file>index.htm</welcome-file><welcome-file>index.jsp</welcome-file><welcome-file>default.html</welcome-file><welcome-file>default.htm</welcome-file><welcome-file>default.jsp</welcome-file></welcome-file-list><!-- Configure ContextLoaderListener to use AnnotationConfigWebApplicationContext \n\t\tinstead of the default XmlWebApplicationContext --><context-param><param-name>contextClass</param-name><param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value></context-param><!-- Configuration locations must consist of one or more comma- or space-delimited \n\t\tfully-qualified @Configuration classes. Fully-qualified packages may also \n\t\tbe specified for component-scanning --><context-param><param-name>contextConfigLocation</param-name><param-value>com.acmeair.web.config.WXSDirectAppConfig</param-value></context-param><filter><filter-name>CookieFilter</filter-name><filter-class>com.acmeair.web.RESTCookieSessionFilter</filter-class></filter><filter-mapping><filter-name>CookieFilter</filter-name><url-pattern>/rest/api/*</url-pattern></filter-mapping><!-- Bootstrap the root application context as usual using ContextLoaderListener --><listener><listener-class>org.springframework.web.context.ContextLoaderListener</listener-class></listener><servlet><servlet-name>javax.ws.rs.core.Application</servlet-name></servlet><servlet-mapping><servlet-name>javax.ws.rs.core.Application</servlet-name><url-pattern>/rest/api/*</url-pattern></servlet-mapping><persistence-unit-ref><persistence-unit-ref-name>acmeair/emf</persistence-unit-ref-name><persistence-unit-name>acmeairunit</persistence-unit-name></persistence-unit-ref><persistence-context-ref><persistence-context-ref-name>acmeair/em</persistence-context-ref-name><persistence-unit-name>acmeairunit</persistence-unit-name></persistence-context-ref>"
violations: []
name: droolsjbpm
description: This ruleset provides help for migrating to a unified KIE (Knowledge Is Everything) API in the upgrade from version 5 to 6.
violations: []
tags: null
name: eap6/java-ee/seam
description: This ruleset provides generic migration knowledge from the Seam 2 UI controls to pure JSF 2 UI Controls
violations: []
tags: null
name: eap7/weblogic/tests/data
violations: []
tags: null
name: eap8/eap7
description: This ruleset provides analysis of Java EE applications that need to change certain CDI-related method calls.
violations: []
tags: null
name: eapxp/thorntail
description: This ruleset provides analysis of Maven built applications that use Thorntail Maven Plugin, which should be replaced by JBoss EAP XP Bootable JAR Maven Plugin, when migrating to JBoss EAP XP.
violations: []
tags: null
name: filemappings
description: This rule set configures the organization matching functionality, using known root-package prefixes to identify libraries and other code.
violations: []
tags: null
name: fuse-service-works/soa-p-5
description: This ruleset provides analysis of JBoss SOA Platform 5 applications and provides information on how to migrate these to Red Hat JBoss Fuse Service Works
violations: []
tags: null
name: fuse/sonicesb
description: This ruleset contains rules that assist in migrating from Sonic ESB to Apache Camel.
violations: []
tags: null
name: hibernate
description: This ruleset provides analysis of deprecated Hibernate java constructs and their migration to newer one.
violations: []
tags: null
name: jakarta-ee9
violations: []
tags: null
name: jws5
description: This ruleset provides analysis of applications that need to change their pom dependencies to upgrade dependencies that belong to the groupId `org.apache.tomcat`
violations: []
tags: null
name: openjdk11/openjdk8
description: This ruleset provides analysis with respect to API removals between OpenJDK 8 and 11.
violations: []
tags: null
name: openjdk17
description: This ruleset provides analysis regarding deprecated APIs in OpenJDK 21.
violations: []
tags: null
name: openjdk17/openjdk11
description: This ruleset provides analysis Security Manager classes and methods deprecated between OpenJDK 11 to 17.
violations: []
tags: null
name: openjdk7/oraclejdk7
description: This ruleset provides analysis with respect to the migration from OracleJDK to OpenJDK.
violations: []
tags: null
name: openliberty/websphere
description: This ruleset identifies usage of Java APIs and technologies which are not provided by Open Liberty.
violations: []
tags: null
name: os/windows
description: This is a ruleset for Windows operating system specific rules while migrating to Linux operating system.
violations: []
tags: null
name: quarkus/springboot
description: This ruleset gives hints to migrate from SpringBoot devtools to Quarkus
violations: []
tags: null
name: rhr/springboot
description: Verify the version of the Spring Boot framework is compatible with those supported by Red Hat Runtimes
violations: []
tags: null
name: technology-usage
description: This ruleset provides analysis of logging libraries.
tags:
  - AOP Alliance
  - Apache Commons Logging
  - AspectJ
  - Bean Validation
  - Bean=EJB XML
  - CDI
  - Connect=EJB XML
  - Connect=RMI
  - Connect=Servlet
  - EJB Timer
  - Embedded framework - AOP Alliance
  - Embedded framework - AspectJ
  - Embedded framework - GIN
  - Embedded framework - Spring
  - Embedded framework - Spring DI
  - Embedded framework - Spring Web
  - Embedded library - Apache Commons Logging
  - Embedded library - Logging Utils
  - Embedded=AOP Alliance
  - Embedded=AspectJ
  - Embedded=GIN
  - Embedded=Properties
  - Embedded=Spring DI
  - Embedded=Spring Web
  - Execute=AOP Alliance
  - Execute=AspectJ
  - Execute=CDI
  - Execute=EJB Timer
  - Execute=GIN
  - Execute=Spring DI
  - GIN
  - HTTP=Servlet
  - Inversion of Control=AOP Alliance
  - Inversion of Control=AspectJ
  - Inversion of Control=CDI
  - Inversion of Control=GIN
  - Inversion of Control=Spring DI
  - Java EE=Bean Validation
  - Java EE=CDI
  - Java EE=EJB Timer
  - Java EE=EJB XML
  - Java EE=JPA XML
  - Java EE=JPA entities
  - Java EE=JPA named queries
  - Java EE=Persistence units
  - Java EE=RMI
  - Java EE=Servlet
  - Java Servlet
  - Logging Utils
  - Other=Properties
  - Other=RMI
  - Persistence=JPA XML
  - Persistence=JPA entities
  - Persistence=JPA named queries
  - Persistence=Persistence units
  - Processing=EJB Timer
  - Servlet
  - Spring
  - Spring DI
  - Spring Web
  - Store=Bean Validation
  - Store=JPA XML
  - Store=JPA entities
  - Store=JPA named queries
  - Store=Persistence units
  - Sustain=Properties
  - Validation=Bean Validation
  - View=Spring Web
  - Web=Spring Web
insights:
  ejb-01000:
    description: EJB Timer
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=EJB Timer
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: |2-
           4  import java.util.ArrayList;
           5  import java.util.Collection;
           6  import java.util.Date;
           7  import java.util.Iterator;
           8  import java.util.List;
           9  import java.util.Map;
          10  import java.util.Random;
          11  import java.util.concurrent.TimeUnit;
          12  import javax.annotation.Resource;
          13  import javax.ejb.Stateless;
          14  import javax.ejb.Timeout;
          15  import javax.ejb.Timer;
          16  import javax.ejb.TimerConfig;
          17  import javax.ejb.TimerService;
          18  import javax.enterprise.event.Event;
          19  import javax.inject.Inject;
          20  import javax.ws.rs.core.Response;
          21  import javax.ws.rs.core.Response.Status;
          22  import org.jboss.examples.ticketmonster.model.Performance;
          23  import org.jboss.examples.ticketmonster.model.Show;
          24  import org.jboss.examples.ticketmonster.model.TicketPrice;
        lineNumber: 14
        variables:
          classes: Timeout
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.Timeout
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: |2-
           5  import java.util.Collection;
           6  import java.util.Date;
           7  import java.util.Iterator;
           8  import java.util.List;
           9  import java.util.Map;
          10  import java.util.Random;
          11  import java.util.concurrent.TimeUnit;
          12  import javax.annotation.Resource;
          13  import javax.ejb.Stateless;
          14  import javax.ejb.Timeout;
          15  import javax.ejb.Timer;
          16  import javax.ejb.TimerConfig;
          17  import javax.ejb.TimerService;
          18  import javax.enterprise.event.Event;
          19  import javax.inject.Inject;
          20  import javax.ws.rs.core.Response;
          21  import javax.ws.rs.core.Response.Status;
          22  import org.jboss.examples.ticketmonster.model.Performance;
          23  import org.jboss.examples.ticketmonster.model.Show;
          24  import org.jboss.examples.ticketmonster.model.TicketPrice;
          25  import org.jboss.examples.ticketmonster.rest.BookingRequest;
        lineNumber: 15
        variables:
          classes: Timer
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.Timer
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: |2-
           6  import java.util.Date;
           7  import java.util.Iterator;
           8  import java.util.List;
           9  import java.util.Map;
          10  import java.util.Random;
          11  import java.util.concurrent.TimeUnit;
          12  import javax.annotation.Resource;
          13  import javax.ejb.Stateless;
          14  import javax.ejb.Timeout;
          15  import javax.ejb.Timer;
          16  import javax.ejb.TimerConfig;
          17  import javax.ejb.TimerService;
          18  import javax.enterprise.event.Event;
          19  import javax.inject.Inject;
          20  import javax.ws.rs.core.Response;
          21  import javax.ws.rs.core.Response.Status;
          22  import org.jboss.examples.ticketmonster.model.Performance;
          23  import org.jboss.examples.ticketmonster.model.Show;
          24  import org.jboss.examples.ticketmonster.model.TicketPrice;
          25  import org.jboss.examples.ticketmonster.rest.BookingRequest;
          26  import org.jboss.examples.ticketmonster.rest.BookingService;
        lineNumber: 16
        variables:
          classes: Timer
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.TimerConfig
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: |2-
           7  import java.util.Iterator;
           8  import java.util.List;
           9  import java.util.Map;
          10  import java.util.Random;
          11  import java.util.concurrent.TimeUnit;
          12  import javax.annotation.Resource;
          13  import javax.ejb.Stateless;
          14  import javax.ejb.Timeout;
          15  import javax.ejb.Timer;
          16  import javax.ejb.TimerConfig;
          17  import javax.ejb.TimerService;
          18  import javax.enterprise.event.Event;
          19  import javax.inject.Inject;
          20  import javax.ws.rs.core.Response;
          21  import javax.ws.rs.core.Response.Status;
          22  import org.jboss.examples.ticketmonster.model.Performance;
          23  import org.jboss.examples.ticketmonster.model.Show;
          24  import org.jboss.examples.ticketmonster.model.TicketPrice;
          25  import org.jboss.examples.ticketmonster.rest.BookingRequest;
          26  import org.jboss.examples.ticketmonster.rest.BookingService;
          27  import org.jboss.examples.ticketmonster.rest.ShowService;
        lineNumber: 17
        variables:
          classes: Timer
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.ejb.TimerService
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "37     public static int MAX_TICKETS_PER_REQUEST;\n38     public static String[] BOOKERS;\n39     @Inject\n40     private ShowService showService;\n41     @Inject\n42     private BookingService bookingService;\n43     @Inject\n44     @BotMessage\n45     Event event;\n46     @Resource\n47     private TimerService timerService;\n48  \n49     public Timer start() {\n50        String startMessage = \"==========================\\n\" + \"Bot started at \" + (new Date()).toString() + \"\\n\";\n51        this.event.fire(startMessage);\n52        return this.timerService.createIntervalTimer(0L, DURATION, new TimerConfig((Serializable)null, false));\n53     }\n54  \n55     public void stop(Timer timer) {\n56        String stopMessage = \"==========================\\n\" + \"Bot stopped at \" + (new Date()).toString() + \"\\n\";\n57        this.event.fire(stopMessage);"
        lineNumber: 47
        variables:
          classes: ""
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Field
          name: timerService
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "39     @Inject\n40     private ShowService showService;\n41     @Inject\n42     private BookingService bookingService;\n43     @Inject\n44     @BotMessage\n45     Event event;\n46     @Resource\n47     private TimerService timerService;\n48  \n49     public Timer start() {\n50        String startMessage = \"==========================\\n\" + \"Bot started at \" + (new Date()).toString() + \"\\n\";\n51        this.event.fire(startMessage);\n52        return this.timerService.createIntervalTimer(0L, DURATION, new TimerConfig((Serializable)null, false));\n53     }\n54  \n55     public void stop(Timer timer) {\n56        String stopMessage = \"==========================\\n\" + \"Bot stopped at \" + (new Date()).toString() + \"\\n\";\n57        this.event.fire(stopMessage);\n58        timer.cancel();\n59     }"
        lineNumber: 49
        variables:
          classes: ""
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Method
          name: start
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "42     private BookingService bookingService;\n43     @Inject\n44     @BotMessage\n45     Event event;\n46     @Resource\n47     private TimerService timerService;\n48  \n49     public Timer start() {\n50        String startMessage = \"==========================\\n\" + \"Bot started at \" + (new Date()).toString() + \"\\n\";\n51        this.event.fire(startMessage);\n52        return this.timerService.createIntervalTimer(0L, DURATION, new TimerConfig((Serializable)null, false));\n53     }\n54  \n55     public void stop(Timer timer) {\n56        String stopMessage = \"==========================\\n\" + \"Bot stopped at \" + (new Date()).toString() + \"\\n\";\n57        this.event.fire(stopMessage);\n58        timer.cancel();\n59     }\n60  \n61     @Timeout\n62     public void book(Timer timer) {"
        lineNumber: 52
        variables:
          classes: ""
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Constructor
          name: start
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "45     Event event;\n46     @Resource\n47     private TimerService timerService;\n48  \n49     public Timer start() {\n50        String startMessage = \"==========================\\n\" + \"Bot started at \" + (new Date()).toString() + \"\\n\";\n51        this.event.fire(startMessage);\n52        return this.timerService.createIntervalTimer(0L, DURATION, new TimerConfig((Serializable)null, false));\n53     }\n54  \n55     public void stop(Timer timer) {\n56        String stopMessage = \"==========================\\n\" + \"Bot stopped at \" + (new Date()).toString() + \"\\n\";\n57        this.event.fire(stopMessage);\n58        timer.cancel();\n59     }\n60  \n61     @Timeout\n62     public void book(Timer timer) {\n63        Show show = (Show)this.selectAtRandom(this.showService.getAll(MultivaluedHashMap.empty()));\n64        Performance performance = (Performance)this.selectAtRandom((Collection)show.getPerformances());\n65        String requestor = (String)this.selectAtRandom((Object[])BOOKERS);"
        lineNumber: 55
        variables:
          classes: ""
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Method
          name: stop
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "51        this.event.fire(startMessage);\n52        return this.timerService.createIntervalTimer(0L, DURATION, new TimerConfig((Serializable)null, false));\n53     }\n54  \n55     public void stop(Timer timer) {\n56        String stopMessage = \"==========================\\n\" + \"Bot stopped at \" + (new Date()).toString() + \"\\n\";\n57        this.event.fire(stopMessage);\n58        timer.cancel();\n59     }\n60  \n61     @Timeout\n62     public void book(Timer timer) {\n63        Show show = (Show)this.selectAtRandom(this.showService.getAll(MultivaluedHashMap.empty()));\n64        Performance performance = (Performance)this.selectAtRandom((Collection)show.getPerformances());\n65        String requestor = (String)this.selectAtRandom((Object[])BOOKERS);\n66        BookingRequest bookingRequest = new BookingRequest(performance, requestor);\n67        List possibleTicketPrices = new ArrayList(show.getTicketPrices());\n68        List indicies = this.selectAtRandom(MAX_TICKET_REQUESTS < possibleTicketPrices.size() ? MAX_TICKET_REQUESTS : possibleTicketPrices.size());\n69        StringBuilder message = (new StringBuilder(\"==========================\\n\")).append(\"Booking by \").append(requestor).append(\" at \").append((new Date()).toString()).append(\"\\n\").append(performance).append(\"\\n\").append(\"~~~~~~~~~~~~~~~~~~~~~~~~~\\n\");\n70        Iterator var9 = indicies.iterator();\n71  "
        lineNumber: 61
        variables:
          classes: ""
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Method
          name: book
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: "52        return this.timerService.createIntervalTimer(0L, DURATION, new TimerConfig((Serializable)null, false));\n53     }\n54  \n55     public void stop(Timer timer) {\n56        String stopMessage = \"==========================\\n\" + \"Bot stopped at \" + (new Date()).toString() + \"\\n\";\n57        this.event.fire(stopMessage);\n58        timer.cancel();\n59     }\n60  \n61     @Timeout\n62     public void book(Timer timer) {\n63        Show show = (Show)this.selectAtRandom(this.showService.getAll(MultivaluedHashMap.empty()));\n64        Performance performance = (Performance)this.selectAtRandom((Collection)show.getPerformances());\n65        String requestor = (String)this.selectAtRandom((Object[])BOOKERS);\n66        BookingRequest bookingRequest = new BookingRequest(performance, requestor);\n67        List possibleTicketPrices = new ArrayList(show.getTicketPrices());\n68        List indicies = this.selectAtRandom(MAX_TICKET_REQUESTS < possibleTicketPrices.size() ? MAX_TICKET_REQUESTS : possibleTicketPrices.size());\n69        StringBuilder message = (new StringBuilder(\"==========================\\n\")).append(\"Booking by \").append(requestor).append(\" at \").append((new Date()).toString()).append(\"\\n\").append(performance).append(\"\\n\").append(\"~~~~~~~~~~~~~~~~~~~~~~~~~\\n\");\n70        Iterator var9 = indicies.iterator();\n71  \n72        while(var9.hasNext()) {"
        lineNumber: 62
        variables:
          classes: ""
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Method
          name: book
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.service;\n 2  \n 3  import java.util.Iterator;\n 4  import java.util.List;\n 5  import java.util.logging.Logger;\n 6  import javax.ejb.Asynchronous;\n 7  import javax.ejb.Singleton;\n 8  import javax.ejb.Timer;\n 9  import javax.enterprise.event.Event;\n10  import javax.enterprise.event.Observes;\n11  import javax.inject.Inject;\n12  import org.jboss.examples.ticketmonster.model.Booking;\n13  import org.jboss.examples.ticketmonster.rest.BookingService;\n14  import org.jboss.examples.ticketmonster.util.CircularBuffer;\n15  import org.jboss.examples.ticketmonster.util.MultivaluedHashMap;\n16  import org.jboss.examples.ticketmonster.util.qualifier.BotMessage;\n17  \n18  @Singleton"
        lineNumber: 8
        variables:
          classes: Timer
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.ejb.Timer
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
        codeSnip: "21     private CircularBuffer log = new CircularBuffer(50);\n22     @Inject\n23     private Bot bot;\n24     @Inject\n25     private BookingService bookingService;\n26     @Inject\n27     private Logger logger;\n28     @Inject\n29     @BotMessage\n30     private Event event;\n31     private Timer timer;\n32  \n33     public void start() {\n34        synchronized(this.bot) {\n35           if (this.timer == null) {\n36              this.logger.info(\"Starting bot\");\n37              this.timer = this.bot.start();\n38           }\n39  \n40        }\n41     }"
        lineNumber: 31
        variables:
          classes: ""
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Field
          name: timer
          package: org.jboss.examples.ticketmonster.service
  embedded-framework-02200:
    description: Embedded framework - AspectJ
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=AspectJ
      - tag=Embedded framework - AspectJ
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/aspectjrt-1.6.8.jar
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/aspectjweaver-1.6.8.jar
        message: ""
  embedded-framework-04700:
    description: Embedded framework - AOP Alliance
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=AOP Alliance
      - tag=Embedded framework - AOP Alliance
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/aopalliance-1.0.jar
        message: ""
  embedded-framework-05900:
    description: Embedded framework - GIN
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded framework - GIN
      - tag=GIN
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/commons-logging-1.1.1.jar
        message: ""
  embedded-framework-08200:
    description: Embedded framework - Spring DI
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded framework - Spring DI
      - tag=Spring DI
    incidents:
      - uri: /opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/spring-beans-3.1.2.RELEASE.jar/spring-beans-3.1.2.RELEASE.jar
        message: ""
        lineNumber: 0
        variables:
          name: org.springframework.spring-beans
          version: 3.1.2.RELEASE
  embedded-framework-08400:
    description: Embedded framework - Spring Web
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded framework - Spring Web
      - tag=Spring Web
    incidents:
      - uri: /opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/spring-web-3.1.2.RELEASE.jar/spring-web-3.1.2.RELEASE.jar
        message: ""
        lineNumber: 0
        variables:
          name: org.springframework.spring-web
          version: 3.1.2.RELEASE
  javaee-technology-usage-00020-javax:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=CDI
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import java.util.HashMap;\n 4  import java.util.List;\n 5  import java.util.Map;\n 6  import javax.inject.Inject;\n 7  import javax.persistence.EntityManager;\n 8  import javax.persistence.TypedQuery;\n 9  import javax.persistence.criteria.CriteriaBuilder;\n10  import javax.persistence.criteria.CriteriaQuery;\n11  import javax.persistence.criteria.Order;\n12  import javax.persistence.criteria.Predicate;\n13  import javax.persistence.criteria.Root;\n14  import javax.ws.rs.GET;\n15  import javax.ws.rs.Path;\n16  import javax.ws.rs.PathParam;"
        lineNumber: 6
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
        codeSnip: |2-
           3  import java.util.ArrayList;
           4  import java.util.Collections;
           5  import java.util.HashMap;
           6  import java.util.Iterator;
           7  import java.util.List;
           8  import java.util.Map;
           9  import java.util.Set;
          10  import java.util.TreeMap;
          11  import javax.ejb.Stateless;
          12  import javax.enterprise.event.Event;
          13  import javax.inject.Inject;
          14  import javax.validation.ConstraintViolation;
          15  import javax.validation.ConstraintViolationException;
          16  import javax.ws.rs.Consumes;
          17  import javax.ws.rs.DELETE;
          18  import javax.ws.rs.POST;
          19  import javax.ws.rs.Path;
          20  import javax.ws.rs.PathParam;
          21  import javax.ws.rs.core.MediaType;
          22  import javax.ws.rs.core.Response;
          23  import javax.ws.rs.core.Response.Status;
        lineNumber: 13
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import java.util.List;\n 4  import javax.inject.Inject;\n 5  import javax.ws.rs.GET;\n 6  import javax.ws.rs.PUT;\n 7  import javax.ws.rs.Path;\n 8  import javax.ws.rs.Produces;\n 9  import javax.ws.rs.core.Response;\n10  import org.jboss.examples.ticketmonster.service.BotService;\n11  \n12  @Path(\"/bot\")\n13  public class BotStatusService {\n14     @Inject"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import java.io.File;\n 4  import javax.inject.Inject;\n 5  import javax.persistence.EntityManager;\n 6  import javax.ws.rs.GET;\n 7  import javax.ws.rs.Path;\n 8  import javax.ws.rs.PathParam;\n 9  import javax.ws.rs.Produces;\n10  import org.jboss.examples.ticketmonster.model.MediaItem;\n11  import org.jboss.examples.ticketmonster.service.MediaManager;\n12  \n13  @Path(\"/media\")\n14  public class MediaService {"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import java.util.ArrayList;\n 4  import java.util.HashMap;\n 5  import java.util.Iterator;\n 6  import java.util.List;\n 7  import java.util.Map;\n 8  import javax.ejb.Stateless;\n 9  import javax.inject.Inject;\n10  import javax.persistence.EntityManager;\n11  import javax.persistence.Query;\n12  import javax.persistence.TypedQuery;\n13  import javax.ws.rs.GET;\n14  import javax.ws.rs.Path;\n15  import javax.ws.rs.Produces;\n16  import org.jboss.examples.ticketmonster.model.Show;\n17  \n18  @Path(\"/metrics\")\n19  @Stateless"
        lineNumber: 9
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
        message: ""
        codeSnip: |2-
           9  import java.util.Map;
          10  import java.util.Random;
          11  import java.util.concurrent.TimeUnit;
          12  import javax.annotation.Resource;
          13  import javax.ejb.Stateless;
          14  import javax.ejb.Timeout;
          15  import javax.ejb.Timer;
          16  import javax.ejb.TimerConfig;
          17  import javax.ejb.TimerService;
          18  import javax.enterprise.event.Event;
          19  import javax.inject.Inject;
          20  import javax.ws.rs.core.Response;
          21  import javax.ws.rs.core.Response.Status;
          22  import org.jboss.examples.ticketmonster.model.Performance;
          23  import org.jboss.examples.ticketmonster.model.Show;
          24  import org.jboss.examples.ticketmonster.model.TicketPrice;
          25  import org.jboss.examples.ticketmonster.rest.BookingRequest;
          26  import org.jboss.examples.ticketmonster.rest.BookingService;
          27  import org.jboss.examples.ticketmonster.rest.ShowService;
          28  import org.jboss.examples.ticketmonster.rest.TicketRequest;
          29  import org.jboss.examples.ticketmonster.util.MultivaluedHashMap;
        lineNumber: 19
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/Bot.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.service;\n 2  \n 3  import java.util.Iterator;\n 4  import java.util.List;\n 5  import java.util.logging.Logger;\n 6  import javax.ejb.Asynchronous;\n 7  import javax.ejb.Singleton;\n 8  import javax.ejb.Timer;\n 9  import javax.enterprise.event.Event;\n10  import javax.enterprise.event.Observes;\n11  import javax.inject.Inject;\n12  import org.jboss.examples.ticketmonster.model.Booking;\n13  import org.jboss.examples.ticketmonster.rest.BookingService;\n14  import org.jboss.examples.ticketmonster.util.CircularBuffer;\n15  import org.jboss.examples.ticketmonster.util.MultivaluedHashMap;\n16  import org.jboss.examples.ticketmonster.util.qualifier.BotMessage;\n17  \n18  @Singleton\n19  public class BotService {\n20     private static final int MAX_LOG_SIZE = 50;\n21     private CircularBuffer log = new CircularBuffer(50);"
        lineNumber: 11
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/BotService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.service;\n 2  \n 3  import java.util.Iterator;\n 4  import java.util.List;\n 5  import javax.inject.Inject;\n 6  import javax.persistence.EntityManager;\n 7  import javax.persistence.LockModeType;\n 8  import javax.persistence.NoResultException;\n 9  import org.jboss.examples.ticketmonster.model.Performance;\n10  import org.jboss.examples.ticketmonster.model.Seat;\n11  import org.jboss.examples.ticketmonster.model.SeatAllocationException;\n12  import org.jboss.examples.ticketmonster.model.Section;\n13  import org.jboss.examples.ticketmonster.model.SectionAllocation;\n14  \n15  public class SeatAllocationService {"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/service/SeatAllocationService.java
          kind: Module
          name: javax.inject.Inject
          package: org.jboss.examples.ticketmonster.service
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util;\n 2  \n 3  import java.util.logging.Logger;\n 4  import javax.enterprise.inject.Produces;\n 5  import javax.enterprise.inject.spi.InjectionPoint;\n 6  import javax.persistence.EntityManager;\n 7  import javax.persistence.PersistenceContext;\n 8  \n 9  public class Resources {\n10     @Produces\n11     @PersistenceContext\n12     private EntityManager em;\n13  \n14     @Produces"
        lineNumber: 4
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.enterprise.inject.Produces
          package: org.jboss.examples.ticketmonster.util
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util;\n 2  \n 3  import java.util.logging.Logger;\n 4  import javax.enterprise.inject.Produces;\n 5  import javax.enterprise.inject.spi.InjectionPoint;\n 6  import javax.persistence.EntityManager;\n 7  import javax.persistence.PersistenceContext;\n 8  \n 9  public class Resources {\n10     @Produces\n11     @PersistenceContext\n12     private EntityManager em;\n13  \n14     @Produces\n15     public Logger produceLog(InjectionPoint injectionPoint) {"
        lineNumber: 5
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/Resources.java
          kind: Module
          name: javax.enterprise.inject.spi.InjectionPoint
          package: org.jboss.examples.ticketmonster.util
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util.qualifier;\n 2  \n 3  import java.lang.annotation.Documented;\n 4  import java.lang.annotation.ElementType;\n 5  import java.lang.annotation.Retention;\n 6  import java.lang.annotation.RetentionPolicy;\n 7  import java.lang.annotation.Target;\n 8  import javax.inject.Qualifier;\n 9  \n10  @Qualifier\n11  @Target({ElementType.TYPE, ElementType.METHOD, ElementType.PARAMETER, ElementType.FIELD})\n12  @Retention(RetentionPolicy.RUNTIME)\n13  @Documented\n14  public @interface BotMessage {\n15  }\n"
        lineNumber: 8
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/BotMessage.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util.qualifier;\n 2  \n 3  import java.lang.annotation.ElementType;\n 4  import java.lang.annotation.Retention;\n 5  import java.lang.annotation.RetentionPolicy;\n 6  import java.lang.annotation.Target;\n 7  import javax.inject.Qualifier;\n 8  \n 9  @Qualifier\n10  @Target({ElementType.FIELD, ElementType.PARAMETER, ElementType.METHOD, ElementType.TYPE})\n11  @Retention(RetentionPolicy.RUNTIME)\n12  public @interface Cancelled {\n13  }\n"
        lineNumber: 7
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Cancelled.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.util.qualifier;\n 2  \n 3  import java.lang.annotation.ElementType;\n 4  import java.lang.annotation.Retention;\n 5  import java.lang.annotation.RetentionPolicy;\n 6  import java.lang.annotation.Target;\n 7  import javax.inject.Qualifier;\n 8  \n 9  @Qualifier\n10  @Target({ElementType.FIELD, ElementType.PARAMETER, ElementType.METHOD, ElementType.TYPE})\n11  @Retention(RetentionPolicy.RUNTIME)\n12  public @interface Created {\n13  }\n"
        lineNumber: 7
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/util/qualifier/Created.java
          kind: Module
          name: javax.inject.Qualifier
          package: org.jboss.examples.ticketmonster.util.qualifier
  javaee-technology-usage-00021:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Execute=CDI
      - tag=Inversion of Control=CDI
      - tag=Java EE=CDI
    incidents:
      - uri: ""
        message: ""
        variables:
          tags:
            - CDI
  javaee-technology-usage-00110:
    description: Bean Validation
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Bean Validation
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
        message: ""
        codeSnip: " 8  import javax.persistence.CascadeType;\n 9  import javax.persistence.Entity;\n10  import javax.persistence.FetchType;\n11  import javax.persistence.GeneratedValue;\n12  import javax.persistence.GenerationType;\n13  import javax.persistence.Id;\n14  import javax.persistence.JoinColumn;\n15  import javax.persistence.ManyToOne;\n16  import javax.persistence.OneToMany;\n17  import javax.validation.Valid;\n18  import javax.validation.constraints.NotNull;\n19  import org.hibernate.validator.constraints.Email;\n20  import org.hibernate.validator.constraints.NotEmpty;\n21  \n22  @Entity\n23  public class Booking implements Serializable {\n24     @Id\n25     @GeneratedValue(\n26        strategy = GenerationType.IDENTITY\n27     )\n28     private Long id;"
        lineNumber: 18
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import java.io.Serializable;\n 4  import javax.persistence.Column;\n 5  import javax.persistence.Entity;\n 6  import javax.persistence.GeneratedValue;\n 7  import javax.persistence.GenerationType;\n 8  import javax.persistence.Id;\n 9  import javax.persistence.ManyToOne;\n10  import javax.validation.constraints.NotNull;\n11  import javax.validation.constraints.Size;\n12  \n13  @Entity\n14  public class Event implements Serializable {\n15     @Id\n16     @GeneratedValue(\n17        strategy = GenerationType.IDENTITY\n18     )\n19     private Long id;\n20     @Column("
        lineNumber: 10
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import java.io.Serializable;\n 4  import javax.persistence.Column;\n 5  import javax.persistence.Entity;\n 6  import javax.persistence.GeneratedValue;\n 7  import javax.persistence.GenerationType;\n 8  import javax.persistence.Id;\n 9  import javax.persistence.ManyToOne;\n10  import javax.validation.constraints.NotNull;\n11  import javax.validation.constraints.Size;\n12  \n13  @Entity\n14  public class Event implements Serializable {\n15     @Id\n16     @GeneratedValue(\n17        strategy = GenerationType.IDENTITY\n18     )\n19     private Long id;\n20     @Column(\n21        unique = true"
        lineNumber: 11
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Module
          name: javax.validation.constraints.Size
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
        codeSnip: " 4  import java.util.Date;\n 5  import javax.persistence.Entity;\n 6  import javax.persistence.GeneratedValue;\n 7  import javax.persistence.GenerationType;\n 8  import javax.persistence.Id;\n 9  import javax.persistence.ManyToOne;\n10  import javax.persistence.Table;\n11  import javax.persistence.Temporal;\n12  import javax.persistence.TemporalType;\n13  import javax.persistence.UniqueConstraint;\n14  import javax.validation.constraints.NotNull;\n15  import org.codehaus.jackson.annotate.JsonIgnoreProperties;\n16  \n17  @Entity\n18  @Table(\n19     uniqueConstraints = {@UniqueConstraint(\n20     columnNames = {\"date\", \"show_id\"}\n21  )}\n22  )\n23  @JsonIgnoreProperties({\"show\"})\n24  public class Performance implements Serializable {"
        lineNumber: 14
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import javax.persistence.Embeddable;\n 4  import javax.persistence.ManyToOne;\n 5  import javax.validation.constraints.Min;\n 6  \n 7  @Embeddable\n 8  public class Seat {\n 9     @Min(1L)\n10     private int rowNumber;\n11     @Min(1L)\n12     private int number;\n13     @ManyToOne\n14     private Section section;\n15  "
        lineNumber: 5
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Seat.java
          kind: Module
          name: javax.validation.constraints.Min
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import java.io.Serializable;\n 4  import javax.persistence.Entity;\n 5  import javax.persistence.GeneratedValue;\n 6  import javax.persistence.GenerationType;\n 7  import javax.persistence.Id;\n 8  import javax.persistence.ManyToOne;\n 9  import javax.persistence.Table;\n10  import javax.persistence.UniqueConstraint;\n11  import javax.validation.constraints.NotNull;\n12  import org.codehaus.jackson.annotate.JsonIgnoreProperties;\n13  import org.hibernate.validator.constraints.NotEmpty;\n14  \n15  @Entity\n16  @Table(\n17     uniqueConstraints = {@UniqueConstraint(\n18     columnNames = {\"name\", \"venue_id\"}\n19  )}\n20  )\n21  @JsonIgnoreProperties({\"venue\"})"
        lineNumber: 11
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
        codeSnip: " 8  import javax.persistence.Entity;\n 9  import javax.persistence.GeneratedValue;\n10  import javax.persistence.GenerationType;\n11  import javax.persistence.Id;\n12  import javax.persistence.Lob;\n13  import javax.persistence.ManyToOne;\n14  import javax.persistence.PostLoad;\n15  import javax.persistence.Table;\n16  import javax.persistence.UniqueConstraint;\n17  import javax.persistence.Version;\n18  import javax.validation.constraints.NotNull;\n19  \n20  @Entity\n21  @Table(\n22     uniqueConstraints = {@UniqueConstraint(\n23     columnNames = {\"performance_id\", \"section_id\"}\n24  )}\n25  )\n26  public class SectionAllocation implements Serializable {\n27     public static final int EXPIRATION_TIME = 60000;\n28     @Id"
        lineNumber: 18
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
        codeSnip: " 7  import javax.persistence.Entity;\n 8  import javax.persistence.FetchType;\n 9  import javax.persistence.GeneratedValue;\n10  import javax.persistence.GenerationType;\n11  import javax.persistence.Id;\n12  import javax.persistence.ManyToOne;\n13  import javax.persistence.OneToMany;\n14  import javax.persistence.OrderBy;\n15  import javax.persistence.Table;\n16  import javax.persistence.UniqueConstraint;\n17  import javax.validation.constraints.NotNull;\n18  \n19  @Entity\n20  @Table(\n21     name = \"Appearance\",\n22     uniqueConstraints = {@UniqueConstraint(\n23     columnNames = {\"event_id\", \"venue_id\"}\n24  )}\n25  )\n26  public class Show implements Serializable {\n27     @Id"
        lineNumber: 17
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import java.io.Serializable;\n 4  import javax.persistence.Entity;\n 5  import javax.persistence.GeneratedValue;\n 6  import javax.persistence.GenerationType;\n 7  import javax.persistence.Id;\n 8  import javax.persistence.ManyToOne;\n 9  import javax.validation.constraints.NotNull;\n10  \n11  @Entity\n12  public class Ticket implements Serializable {\n13     @Id\n14     @GeneratedValue(\n15        strategy = GenerationType.IDENTITY\n16     )\n17     private Long id;\n18     @NotNull\n19     private Seat seat;"
        lineNumber: 9
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import java.io.Serializable;\n 4  import javax.persistence.Entity;\n 5  import javax.persistence.GeneratedValue;\n 6  import javax.persistence.GenerationType;\n 7  import javax.persistence.Id;\n 8  import javax.persistence.ManyToOne;\n 9  import javax.persistence.Table;\n10  import javax.persistence.UniqueConstraint;\n11  import javax.validation.constraints.NotNull;\n12  import org.codehaus.jackson.annotate.JsonIgnoreProperties;\n13  \n14  @Entity\n15  @JsonIgnoreProperties({\"show\"})\n16  @Table(\n17     uniqueConstraints = {@UniqueConstraint(\n18     columnNames = {\"section_id\", \"show_id\", \"ticketcategory_id\"}\n19  )}\n20  )\n21  public class TicketPrice implements Serializable {"
        lineNumber: 11
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Module
          name: javax.validation.constraints.NotNull
          package: org.jboss.examples.ticketmonster.model
  javaee-technology-usage-00120:
    description: Java Servlet
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Java Servlet
      - tag=Servlet
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/CustomerREST.java
        message: ""
        codeSnip: " 1  package com.acmeair.web;\n 2  \n 3  import com.acmeair.entities.Customer;\n 4  import com.acmeair.entities.CustomerAddress;\n 5  import com.acmeair.service.CustomerService;\n 6  import javax.servlet.http.HttpServletRequest;\n 7  import javax.ws.rs.CookieParam;\n 8  import javax.ws.rs.GET;\n 9  import javax.ws.rs.POST;\n10  import javax.ws.rs.Path;\n11  import javax.ws.rs.PathParam;\n12  import javax.ws.rs.Produces;\n13  import javax.ws.rs.core.Context;\n14  import javax.ws.rs.core.Response;\n15  import javax.ws.rs.core.Response.Status;\n16  import org.springframework.stereotype.Component;"
        lineNumber: 6
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/CustomerREST.java
          kind: Module
          name: javax.servlet.http.HttpServletRequest
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
        message: ""
        codeSnip: " 1  package com.acmeair.web;\n 2  \n 3  import com.acmeair.entities.CustomerSession;\n 4  import com.acmeair.service.CustomerService;\n 5  import java.io.IOException;\n 6  import javax.annotation.Resource;\n 7  import javax.servlet.Filter;\n 8  import javax.servlet.FilterChain;\n 9  import javax.servlet.FilterConfig;\n10  import javax.servlet.ServletException;\n11  import javax.servlet.ServletRequest;\n12  import javax.servlet.ServletResponse;\n13  import javax.servlet.http.Cookie;\n14  import javax.servlet.http.HttpServletRequest;\n15  import javax.servlet.http.HttpServletResponse;\n16  import javax.sql.DataSource;\n17  "
        lineNumber: 7
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
          kind: Module
          name: javax.servlet.Filter
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
        message: ""
        codeSnip: " 1  package com.acmeair.web;\n 2  \n 3  import com.acmeair.entities.CustomerSession;\n 4  import com.acmeair.service.CustomerService;\n 5  import java.io.IOException;\n 6  import javax.annotation.Resource;\n 7  import javax.servlet.Filter;\n 8  import javax.servlet.FilterChain;\n 9  import javax.servlet.FilterConfig;\n10  import javax.servlet.ServletException;\n11  import javax.servlet.ServletRequest;\n12  import javax.servlet.ServletResponse;\n13  import javax.servlet.http.Cookie;\n14  import javax.servlet.http.HttpServletRequest;\n15  import javax.servlet.http.HttpServletResponse;\n16  import javax.sql.DataSource;\n17  \n18  public class RESTCookieSessionFilter implements Filter {"
        lineNumber: 8
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
          kind: Module
          name: javax.servlet.FilterChain
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
        message: ""
        codeSnip: " 1  package com.acmeair.web;\n 2  \n 3  import com.acmeair.entities.CustomerSession;\n 4  import com.acmeair.service.CustomerService;\n 5  import java.io.IOException;\n 6  import javax.annotation.Resource;\n 7  import javax.servlet.Filter;\n 8  import javax.servlet.FilterChain;\n 9  import javax.servlet.FilterConfig;\n10  import javax.servlet.ServletException;\n11  import javax.servlet.ServletRequest;\n12  import javax.servlet.ServletResponse;\n13  import javax.servlet.http.Cookie;\n14  import javax.servlet.http.HttpServletRequest;\n15  import javax.servlet.http.HttpServletResponse;\n16  import javax.sql.DataSource;\n17  \n18  public class RESTCookieSessionFilter implements Filter {\n19     static final String LOGIN_USER = \"acmeair.login_user\";"
        lineNumber: 9
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
          kind: Module
          name: javax.servlet.FilterConfig
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
        message: ""
        codeSnip: " 1  package com.acmeair.web;\n 2  \n 3  import com.acmeair.entities.CustomerSession;\n 4  import com.acmeair.service.CustomerService;\n 5  import java.io.IOException;\n 6  import javax.annotation.Resource;\n 7  import javax.servlet.Filter;\n 8  import javax.servlet.FilterChain;\n 9  import javax.servlet.FilterConfig;\n10  import javax.servlet.ServletException;\n11  import javax.servlet.ServletRequest;\n12  import javax.servlet.ServletResponse;\n13  import javax.servlet.http.Cookie;\n14  import javax.servlet.http.HttpServletRequest;\n15  import javax.servlet.http.HttpServletResponse;\n16  import javax.sql.DataSource;\n17  \n18  public class RESTCookieSessionFilter implements Filter {\n19     static final String LOGIN_USER = \"acmeair.login_user\";\n20     private static final String LOGIN_PATH = \"/rest/api/login\";"
        lineNumber: 10
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
          kind: Module
          name: javax.servlet.ServletException
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
        message: ""
        codeSnip: " 1  package com.acmeair.web;\n 2  \n 3  import com.acmeair.entities.CustomerSession;\n 4  import com.acmeair.service.CustomerService;\n 5  import java.io.IOException;\n 6  import javax.annotation.Resource;\n 7  import javax.servlet.Filter;\n 8  import javax.servlet.FilterChain;\n 9  import javax.servlet.FilterConfig;\n10  import javax.servlet.ServletException;\n11  import javax.servlet.ServletRequest;\n12  import javax.servlet.ServletResponse;\n13  import javax.servlet.http.Cookie;\n14  import javax.servlet.http.HttpServletRequest;\n15  import javax.servlet.http.HttpServletResponse;\n16  import javax.sql.DataSource;\n17  \n18  public class RESTCookieSessionFilter implements Filter {\n19     static final String LOGIN_USER = \"acmeair.login_user\";\n20     private static final String LOGIN_PATH = \"/rest/api/login\";\n21     private static final String LOGOUT_PATH = \"/rest/api/login/logout\";"
        lineNumber: 11
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
          kind: Module
          name: javax.servlet.ServletRequest
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
        message: ""
        codeSnip: " 2  \n 3  import com.acmeair.entities.CustomerSession;\n 4  import com.acmeair.service.CustomerService;\n 5  import java.io.IOException;\n 6  import javax.annotation.Resource;\n 7  import javax.servlet.Filter;\n 8  import javax.servlet.FilterChain;\n 9  import javax.servlet.FilterConfig;\n10  import javax.servlet.ServletException;\n11  import javax.servlet.ServletRequest;\n12  import javax.servlet.ServletResponse;\n13  import javax.servlet.http.Cookie;\n14  import javax.servlet.http.HttpServletRequest;\n15  import javax.servlet.http.HttpServletResponse;\n16  import javax.sql.DataSource;\n17  \n18  public class RESTCookieSessionFilter implements Filter {\n19     static final String LOGIN_USER = \"acmeair.login_user\";\n20     private static final String LOGIN_PATH = \"/rest/api/login\";\n21     private static final String LOGOUT_PATH = \"/rest/api/login/logout\";\n22     private CustomerService customerService = (CustomerService)ServiceLocator.getService(CustomerService.class);"
        lineNumber: 12
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
          kind: Module
          name: javax.servlet.ServletResponse
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
        message: ""
        codeSnip: " 3  import com.acmeair.entities.CustomerSession;\n 4  import com.acmeair.service.CustomerService;\n 5  import java.io.IOException;\n 6  import javax.annotation.Resource;\n 7  import javax.servlet.Filter;\n 8  import javax.servlet.FilterChain;\n 9  import javax.servlet.FilterConfig;\n10  import javax.servlet.ServletException;\n11  import javax.servlet.ServletRequest;\n12  import javax.servlet.ServletResponse;\n13  import javax.servlet.http.Cookie;\n14  import javax.servlet.http.HttpServletRequest;\n15  import javax.servlet.http.HttpServletResponse;\n16  import javax.sql.DataSource;\n17  \n18  public class RESTCookieSessionFilter implements Filter {\n19     static final String LOGIN_USER = \"acmeair.login_user\";\n20     private static final String LOGIN_PATH = \"/rest/api/login\";\n21     private static final String LOGOUT_PATH = \"/rest/api/login/logout\";\n22     private CustomerService customerService = (CustomerService)ServiceLocator.getService(CustomerService.class);\n23     @Resource("
        lineNumber: 13
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
          kind: Module
          name: javax.servlet.http.Cookie
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
        message: ""
        codeSnip: " 4  import com.acmeair.service.CustomerService;\n 5  import java.io.IOException;\n 6  import javax.annotation.Resource;\n 7  import javax.servlet.Filter;\n 8  import javax.servlet.FilterChain;\n 9  import javax.servlet.FilterConfig;\n10  import javax.servlet.ServletException;\n11  import javax.servlet.ServletRequest;\n12  import javax.servlet.ServletResponse;\n13  import javax.servlet.http.Cookie;\n14  import javax.servlet.http.HttpServletRequest;\n15  import javax.servlet.http.HttpServletResponse;\n16  import javax.sql.DataSource;\n17  \n18  public class RESTCookieSessionFilter implements Filter {\n19     static final String LOGIN_USER = \"acmeair.login_user\";\n20     private static final String LOGIN_PATH = \"/rest/api/login\";\n21     private static final String LOGOUT_PATH = \"/rest/api/login/logout\";\n22     private CustomerService customerService = (CustomerService)ServiceLocator.getService(CustomerService.class);\n23     @Resource(\n24        name = \"jdbc/acmeairdatasource\""
        lineNumber: 14
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
          kind: Module
          name: javax.servlet.http.HttpServletRequest
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
        message: ""
        codeSnip: " 5  import java.io.IOException;\n 6  import javax.annotation.Resource;\n 7  import javax.servlet.Filter;\n 8  import javax.servlet.FilterChain;\n 9  import javax.servlet.FilterConfig;\n10  import javax.servlet.ServletException;\n11  import javax.servlet.ServletRequest;\n12  import javax.servlet.ServletResponse;\n13  import javax.servlet.http.Cookie;\n14  import javax.servlet.http.HttpServletRequest;\n15  import javax.servlet.http.HttpServletResponse;\n16  import javax.sql.DataSource;\n17  \n18  public class RESTCookieSessionFilter implements Filter {\n19     static final String LOGIN_USER = \"acmeair.login_user\";\n20     private static final String LOGIN_PATH = \"/rest/api/login\";\n21     private static final String LOGOUT_PATH = \"/rest/api/login/logout\";\n22     private CustomerService customerService = (CustomerService)ServiceLocator.getService(CustomerService.class);\n23     @Resource(\n24        name = \"jdbc/acmeairdatasource\"\n25     )"
        lineNumber: 15
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/RESTCookieSessionFilter.java
          kind: Module
          name: javax.servlet.http.HttpServletResponse
          package: com.acmeair.web
  javaee-technology-usage-00210:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Java EE=Bean Validation
      - tag=Store=Bean Validation
      - tag=Validation=Bean Validation
    incidents:
      - uri: ""
        message: ""
        variables:
          tags:
            - Bean Validation
  javaee-technology-usage-00230:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Connect=Servlet
      - tag=HTTP=Servlet
      - tag=Java EE=Servlet
    incidents:
      - uri: ""
        message: ""
        variables:
          tags:
            - Servlet
  logging-usage-00020:
    description: Embedded library - Apache Commons Logging
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Apache Commons Logging
      - tag=Embedded library - Apache Commons Logging
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/commons-logging-1.1.1.jar
        message: ""
  logging-usage-00160:
    description: Embedded library - Logging Utils
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded library - Logging Utils
      - tag=Logging Utils
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/commons-logging-1.1.1.jar
        message: ""
  non-xml-technology-usage-02000:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Bean=EJB XML
      - tag=Connect=EJB XML
      - tag=Java EE=EJB XML
    incidents:
      - uri: ""
        message: ""
        variables:
          tags:
            - EJB XML
  non-xml-technology-usage-17000:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Java EE=JPA XML
      - tag=Persistence=JPA XML
      - tag=Store=JPA XML
    incidents:
      - uri: ""
        message: ""
        variables:
          tags:
            - JPA XML
  non-xml-technology-usage-20000:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded=Properties
      - tag=Other=Properties
      - tag=Sustain=Properties
    incidents:
      - uri: ""
        message: ""
        variables:
          tags:
            - Properties
  spring-catchall-00001:
    description: Embedded framework - Spring
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded framework - Spring
      - tag=Spring
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/spring-aop-3.1.2.RELEASE.jar
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/spring-asm-3.1.2.RELEASE.jar
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/spring-beans-3.1.2.RELEASE.jar
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/spring-context-3.1.2.RELEASE.jar
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/spring-core-3.1.2.RELEASE.jar
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/spring-expression-3.1.2.RELEASE.jar
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/spring-tx-3.1.2.RELEASE.jar
        message: ""
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/lib/spring-web-3.1.2.RELEASE.jar
        message: ""
  technology-usage-connect-01000:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Connect=RMI
      - tag=Java EE=RMI
      - tag=Other=RMI
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/BookingsREST.java
        message: ""
        codeSnip: " 8  import javax.ws.rs.Consumes;\n 9  import javax.ws.rs.FormParam;\n10  import javax.ws.rs.GET;\n11  import javax.ws.rs.POST;\n12  import javax.ws.rs.Path;\n13  import javax.ws.rs.PathParam;\n14  import javax.ws.rs.Produces;\n15  import javax.ws.rs.core.Response;\n16  import javax.ws.rs.core.Response.Status;\n17  \n18  @Path(\"/bookings\")\n19  public class BookingsREST {\n20     private BookingService bs = (BookingService)ServiceLocator.getService(BookingService.class);\n21  \n22     @POST\n23     @Consumes({\"application/x-www-form-urlencoded\"})\n24     @Path(\"/bookflights\")\n25     @Produces({\"application/json\"})\n26     public Response bookFlights(@FormParam(\"userid\") String userid, @FormParam(\"toFlightId\") String toFlightId, @FormParam(\"toFlightSegId\") String toFlightSegId, @FormParam(\"retFlightId\") String retFlightId, @FormParam(\"retFlightSegId\") String retFlightSegId, @FormParam(\"oneWayFlight\") boolean oneWay) {\n27        try {\n28           BookingPK bookingIdTo = this.bs.bookFlight(userid, new FlightPK(toFlightSegId, toFlightId));"
        lineNumber: 18
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/BookingsREST.java
          kind: Class
          name: Path
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/BookingsREST.java
        message: ""
        codeSnip: "14  import javax.ws.rs.Produces;\n15  import javax.ws.rs.core.Response;\n16  import javax.ws.rs.core.Response.Status;\n17  \n18  @Path(\"/bookings\")\n19  public class BookingsREST {\n20     private BookingService bs = (BookingService)ServiceLocator.getService(BookingService.class);\n21  \n22     @POST\n23     @Consumes({\"application/x-www-form-urlencoded\"})\n24     @Path(\"/bookflights\")\n25     @Produces({\"application/json\"})\n26     public Response bookFlights(@FormParam(\"userid\") String userid, @FormParam(\"toFlightId\") String toFlightId, @FormParam(\"toFlightSegId\") String toFlightSegId, @FormParam(\"retFlightId\") String retFlightId, @FormParam(\"retFlightSegId\") String retFlightSegId, @FormParam(\"oneWayFlight\") boolean oneWay) {\n27        try {\n28           BookingPK bookingIdTo = this.bs.bookFlight(userid, new FlightPK(toFlightSegId, toFlightId));\n29           BookingPK bookingIdReturn = null;\n30           if (!oneWay) {\n31              bookingIdReturn = this.bs.bookFlight(userid, new FlightPK(retFlightSegId, retFlightId));\n32           }\n33  \n34           BookingInfo bi;"
        lineNumber: 24
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/BookingsREST.java
          kind: Method
          name: POST
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/BookingsREST.java
        message: ""
        codeSnip: "39           }\n40  \n41           return Response.ok(bi).build();\n42        } catch (Exception var10) {\n43           var10.printStackTrace();\n44           return Response.status(Status.INTERNAL_SERVER_ERROR).build();\n45        }\n46     }\n47  \n48     @GET\n49     @Path(\"/bybookingnumber/{userid}/{number}\")\n50     @Produces({\"application/json\"})\n51     public Booking getBookingByNumber(@PathParam(\"number\") String number, @FormParam(\"userid\") String userid) {\n52        try {\n53           Booking b = this.bs.getBooking(userid, number);\n54           return b;\n55        } catch (Exception var4) {\n56           var4.printStackTrace();\n57           return null;\n58        }\n59     }"
        lineNumber: 49
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/BookingsREST.java
          kind: Method
          name: GET
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/BookingsREST.java
        message: ""
        codeSnip: "52        try {\n53           Booking b = this.bs.getBooking(userid, number);\n54           return b;\n55        } catch (Exception var4) {\n56           var4.printStackTrace();\n57           return null;\n58        }\n59     }\n60  \n61     @GET\n62     @Path(\"/byuser/{user}\")\n63     @Produces({\"application/json\"})\n64     public List getBookingsByUser(@PathParam(\"user\") String user) {\n65        try {\n66           return this.bs.getBookingsByUser(user);\n67        } catch (Exception var3) {\n68           var3.printStackTrace();\n69           return null;\n70        }\n71     }\n72  "
        lineNumber: 62
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/BookingsREST.java
          kind: Method
          name: GET
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/BookingsREST.java
        message: ""
        codeSnip: "65        try {\n66           return this.bs.getBookingsByUser(user);\n67        } catch (Exception var3) {\n68           var3.printStackTrace();\n69           return null;\n70        }\n71     }\n72  \n73     @POST\n74     @Consumes({\"application/x-www-form-urlencoded\"})\n75     @Path(\"/cancelbooking\")\n76     @Produces({\"application/json\"})\n77     public Response cancelBookingsByNumber(@FormParam(\"number\") String number, @FormParam(\"userid\") String userid) {\n78        try {\n79           this.bs.cancelBooking(userid, number);\n80           return Response.ok(\"booking \" + number + \" deleted.\").build();\n81        } catch (Exception var4) {\n82           var4.printStackTrace();\n83           return Response.status(Status.INTERNAL_SERVER_ERROR).build();\n84        }\n85     }"
        lineNumber: 75
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/BookingsREST.java
          kind: Method
          name: POST
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/CustomerREST.java
        message: ""
        codeSnip: " 8  import javax.ws.rs.GET;\n 9  import javax.ws.rs.POST;\n10  import javax.ws.rs.Path;\n11  import javax.ws.rs.PathParam;\n12  import javax.ws.rs.Produces;\n13  import javax.ws.rs.core.Context;\n14  import javax.ws.rs.core.Response;\n15  import javax.ws.rs.core.Response.Status;\n16  import org.springframework.stereotype.Component;\n17  \n18  @Path(\"/customer\")\n19  @Component\n20  public class CustomerREST {\n21     private CustomerService customerService = (CustomerService)ServiceLocator.getService(CustomerService.class);\n22     @Context\n23     private HttpServletRequest request;\n24  \n25     private boolean validate(String customerid) {\n26        String loginUser = (String)this.request.getAttribute(\"acmeair.login_user\");\n27        return customerid.equals(loginUser);\n28     }"
        lineNumber: 18
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/CustomerREST.java
          kind: Class
          name: Path
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/CustomerREST.java
        message: ""
        codeSnip: "21     private CustomerService customerService = (CustomerService)ServiceLocator.getService(CustomerService.class);\n22     @Context\n23     private HttpServletRequest request;\n24  \n25     private boolean validate(String customerid) {\n26        String loginUser = (String)this.request.getAttribute(\"acmeair.login_user\");\n27        return customerid.equals(loginUser);\n28     }\n29  \n30     @GET\n31     @Path(\"/byid/{custid}\")\n32     @Produces({\"application/json\"})\n33     public Response getCustomer(@CookieParam(\"sessionid\") String sessionid, @PathParam(\"custid\") String customerid) {\n34        try {\n35           if (!this.validate(customerid)) {\n36              return Response.status(Status.FORBIDDEN).build();\n37           } else {\n38              Customer customer = this.customerService.getCustomerByUsername(customerid);\n39              return Response.ok(customer).build();\n40           }\n41        } catch (Exception var4) {"
        lineNumber: 31
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/CustomerREST.java
          kind: Method
          name: GET
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/CustomerREST.java
        message: ""
        codeSnip: "38              Customer customer = this.customerService.getCustomerByUsername(customerid);\n39              return Response.ok(customer).build();\n40           }\n41        } catch (Exception var4) {\n42           var4.printStackTrace();\n43           return null;\n44        }\n45     }\n46  \n47     @POST\n48     @Path(\"/byid/{custid}\")\n49     @Produces({\"application/json\"})\n50     public Response putCustomer(@CookieParam(\"sessionid\") String sessionid, Customer customer) {\n51        if (!this.validate(customer.getUsername())) {\n52           return Response.status(Status.FORBIDDEN).build();\n53        } else {\n54           Customer customerFromDB = this.customerService.getCustomerByUsernameAndPassword(customer.getUsername(), customer.getPassword());\n55           if (customerFromDB == null) {\n56              return Response.status(Status.FORBIDDEN).build();\n57           } else {\n58              CustomerAddress addressFromDB = customerFromDB.getAddress();"
        lineNumber: 48
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/CustomerREST.java
          kind: Method
          name: POST
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/FlightsREST.java
        message: ""
        codeSnip: " 3  import com.acmeair.service.FlightService;\n 4  import java.util.ArrayList;\n 5  import java.util.Date;\n 6  import java.util.List;\n 7  import javax.ws.rs.Consumes;\n 8  import javax.ws.rs.FormParam;\n 9  import javax.ws.rs.POST;\n10  import javax.ws.rs.Path;\n11  import javax.ws.rs.Produces;\n12  \n13  @Path(\"/flights\")\n14  public class FlightsREST {\n15     private FlightService flightService = (FlightService)ServiceLocator.getService(FlightService.class);\n16  \n17     @POST\n18     @Path(\"/queryflights\")\n19     @Consumes({\"application/x-www-form-urlencoded\"})\n20     @Produces({\"application/json\"})\n21     public TripFlightOptions getTripFlights(@FormParam(\"fromAirport\") String fromAirport, @FormParam(\"toAirport\") String toAirport, @FormParam(\"fromDate\") Date fromDate, @FormParam(\"returnDate\") Date returnDate, @FormParam(\"oneWay\") boolean oneWay) {\n22        TripFlightOptions options = new TripFlightOptions();\n23        ArrayList legs = new ArrayList();"
        lineNumber: 13
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/FlightsREST.java
          kind: Class
          name: Path
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/FlightsREST.java
        message: ""
        codeSnip: " 8  import javax.ws.rs.FormParam;\n 9  import javax.ws.rs.POST;\n10  import javax.ws.rs.Path;\n11  import javax.ws.rs.Produces;\n12  \n13  @Path(\"/flights\")\n14  public class FlightsREST {\n15     private FlightService flightService = (FlightService)ServiceLocator.getService(FlightService.class);\n16  \n17     @POST\n18     @Path(\"/queryflights\")\n19     @Consumes({\"application/x-www-form-urlencoded\"})\n20     @Produces({\"application/json\"})\n21     public TripFlightOptions getTripFlights(@FormParam(\"fromAirport\") String fromAirport, @FormParam(\"toAirport\") String toAirport, @FormParam(\"fromDate\") Date fromDate, @FormParam(\"returnDate\") Date returnDate, @FormParam(\"oneWay\") boolean oneWay) {\n22        TripFlightOptions options = new TripFlightOptions();\n23        ArrayList legs = new ArrayList();\n24        TripLegInfo toInfo = new TripLegInfo();\n25        List toFlights = this.flightService.getFlightByAirportsAndDepartureDate(fromAirport, toAirport, fromDate);\n26        toInfo.setFlightsOptions(toFlights);\n27        legs.add(toInfo);\n28        toInfo.setCurrentPage(0);"
        lineNumber: 18
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/FlightsREST.java
          kind: Method
          name: POST
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/FlightsREST.java
        message: ""
        codeSnip: "41           options.setTripLegs(2);\n42        } else {\n43           options.setTripLegs(1);\n44        }\n45  \n46        options.setTripFlights(legs);\n47        return options;\n48     }\n49  \n50     @POST\n51     @Path(\"/browseflights\")\n52     @Consumes({\"application/x-www-form-urlencoded\"})\n53     @Produces({\"application/json\"})\n54     public TripFlightOptions browseFlights(@FormParam(\"fromAirport\") String fromAirport, @FormParam(\"toAirport\") String toAirport, @FormParam(\"oneWay\") boolean oneWay) {\n55        TripFlightOptions options = new TripFlightOptions();\n56        ArrayList legs = new ArrayList();\n57        TripLegInfo toInfo = new TripLegInfo();\n58        List toFlights = this.flightService.getFlightByAirports(fromAirport, toAirport);\n59        toInfo.setFlightsOptions(toFlights);\n60        legs.add(toInfo);\n61        toInfo.setCurrentPage(0);"
        lineNumber: 51
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/FlightsREST.java
          kind: Method
          name: POST
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoaderREST.java
        message: ""
        codeSnip: "14  import java.math.BigDecimal;\n15  import java.util.ArrayList;\n16  import java.util.Calendar;\n17  import java.util.Date;\n18  import java.util.StringTokenizer;\n19  import javax.ws.rs.GET;\n20  import javax.ws.rs.Path;\n21  import javax.ws.rs.Produces;\n22  import org.springframework.stereotype.Component;\n23  \n24  @Path(\"/loader\")\n25  @Component\n26  public class LoaderREST {\n27     private CustomerService customerService = (CustomerService)ServiceLocator.getService(CustomerService.class);\n28     private FlightService flightService = (FlightService)ServiceLocator.getService(FlightService.class);\n29     private static Object lock = new Object();\n30  \n31     @GET\n32     @Path(\"/load\")\n33     @Produces({\"text/plain\"})\n34     public String load() {"
        lineNumber: 24
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoaderREST.java
          kind: Class
          name: Path
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoaderREST.java
        message: ""
        codeSnip: "22  import org.springframework.stereotype.Component;\n23  \n24  @Path(\"/loader\")\n25  @Component\n26  public class LoaderREST {\n27     private CustomerService customerService = (CustomerService)ServiceLocator.getService(CustomerService.class);\n28     private FlightService flightService = (FlightService)ServiceLocator.getService(FlightService.class);\n29     private static Object lock = new Object();\n30  \n31     @GET\n32     @Path(\"/load\")\n33     @Produces({\"text/plain\"})\n34     public String load() {\n35        return this.loadData(10L, 30);\n36     }\n37  \n38     @GET\n39     @Path(\"/loadSmall\")\n40     @Produces({\"text/plain\"})\n41     public String loadSmall() {\n42        return this.loadData(5L, 5);"
        lineNumber: 32
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoaderREST.java
          kind: Method
          name: GET
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoaderREST.java
        message: ""
        codeSnip: "29     private static Object lock = new Object();\n30  \n31     @GET\n32     @Path(\"/load\")\n33     @Produces({\"text/plain\"})\n34     public String load() {\n35        return this.loadData(10L, 30);\n36     }\n37  \n38     @GET\n39     @Path(\"/loadSmall\")\n40     @Produces({\"text/plain\"})\n41     public String loadSmall() {\n42        return this.loadData(5L, 5);\n43     }\n44  \n45     @GET\n46     @Path(\"/loadTiny\")\n47     @Produces({\"text/plain\"})\n48     public String loadTiny() {\n49        return this.loadData(2L, 2);"
        lineNumber: 39
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoaderREST.java
          kind: Method
          name: GET
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoaderREST.java
        message: ""
        codeSnip: "36     }\n37  \n38     @GET\n39     @Path(\"/loadSmall\")\n40     @Produces({\"text/plain\"})\n41     public String loadSmall() {\n42        return this.loadData(5L, 5);\n43     }\n44  \n45     @GET\n46     @Path(\"/loadTiny\")\n47     @Produces({\"text/plain\"})\n48     public String loadTiny() {\n49        return this.loadData(2L, 2);\n50     }\n51  \n52     private String loadData(long numCustomers, int segments) {\n53        synchronized(lock) {\n54           try {\n55              this.loadCustomers(numCustomers);\n56           } catch (Exception var8) {"
        lineNumber: 46
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoaderREST.java
          kind: Method
          name: GET
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoginREST.java
        message: ""
        codeSnip: " 8  import javax.ws.rs.GET;\n 9  import javax.ws.rs.POST;\n10  import javax.ws.rs.Path;\n11  import javax.ws.rs.Produces;\n12  import javax.ws.rs.QueryParam;\n13  import javax.ws.rs.core.NewCookie;\n14  import javax.ws.rs.core.Response;\n15  import javax.ws.rs.core.Response.Status;\n16  import org.springframework.stereotype.Component;\n17  \n18  @Path(\"/login\")\n19  @Component\n20  public class LoginREST {\n21     public static String SESSIONID_COOKIE_NAME = \"sessionid\";\n22     private CustomerService customerService = (CustomerService)ServiceLocator.getService(CustomerService.class);\n23  \n24     @POST\n25     @Consumes({\"application/x-www-form-urlencoded\"})\n26     @Produces({\"text/plain\"})\n27     public Response login(@FormParam(\"login\") String login, @FormParam(\"password\") String password) {\n28        try {"
        lineNumber: 18
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoginREST.java
          kind: Class
          name: Path
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoginREST.java
        message: ""
        codeSnip: "34              NewCookie sessCookie = new NewCookie(SESSIONID_COOKIE_NAME, session.getId());\n35              return Response.ok(\"logged in\").cookie(new NewCookie[]{sessCookie}).build();\n36           }\n37        } catch (Exception var6) {\n38           var6.printStackTrace();\n39           return null;\n40        }\n41     }\n42  \n43     @GET\n44     @Path(\"/logout\")\n45     @Produces({\"text/plain\"})\n46     public Response logout(@QueryParam(\"login\") String login, @CookieParam(\"sessionid\") String sessionid) {\n47        try {\n48           this.customerService.invalidateSession(sessionid);\n49           NewCookie sessCookie = new NewCookie(SESSIONID_COOKIE_NAME, \"\");\n50           return Response.ok(\"logged out\").cookie(new NewCookie[]{sessCookie}).build();\n51        } catch (Exception var4) {\n52           var4.printStackTrace();\n53           return null;\n54        }"
        lineNumber: 44
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/web/LoginREST.java
          kind: Method
          name: GET
          package: com.acmeair.web
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
        codeSnip: "57  \n58        if (queryParameters.containsKey(\"maxResults\")) {\n59           maxResults = Integer.parseInt((String)queryParameters.getFirst(\"maxResults\"));\n60           query.setMaxResults(maxResults);\n61        }\n62  \n63        return query.getResultList();\n64     }\n65  \n66     @GET\n67     @Path(\"/count\")\n68     @Produces({\"application/json\"})\n69     public Map getCount(@Context UriInfo uriInfo) {\n70        CriteriaBuilder criteriaBuilder = this.entityManager.getCriteriaBuilder();\n71        CriteriaQuery criteriaQuery = criteriaBuilder.createQuery(Long.class);\n72        Root root = criteriaQuery.from(this.entityClass);\n73        criteriaQuery.select(criteriaBuilder.count(root));\n74        Predicate[] predicates = this.extractPredicates(uriInfo.getQueryParameters(), criteriaBuilder, root);\n75        criteriaQuery.where(predicates);\n76        Map result = new HashMap();\n77        result.put(\"count\", this.entityManager.createQuery(criteriaQuery).getSingleResult());"
        lineNumber: 67
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
        message: ""
        codeSnip: "76        Map result = new HashMap();\n77        result.put(\"count\", this.entityManager.createQuery(criteriaQuery).getSingleResult());\n78        return result;\n79     }\n80  \n81     protected Predicate[] extractPredicates(MultivaluedMap queryParameters, CriteriaBuilder criteriaBuilder, Root root) {\n82        return new Predicate[0];\n83     }\n84  \n85     @GET\n86     @Path(\"/{id:[0-9][0-9]*}\")\n87     @Produces({\"application/json\"})\n88     public Object getSingleInstance(@PathParam(\"id\") Long id) {\n89        CriteriaBuilder criteriaBuilder = this.entityManager.getCriteriaBuilder();\n90        CriteriaQuery criteriaQuery = criteriaBuilder.createQuery(this.entityClass);\n91        Root root = criteriaQuery.from(this.entityClass);\n92        Predicate condition = criteriaBuilder.equal(root.get(\"id\"), id);\n93        criteriaQuery.select(criteriaBuilder.createQuery(this.entityClass).getSelection()).where(condition);\n94        return this.entityManager.createQuery(criteriaQuery).getSingleResult();\n95     }\n96  }"
        lineNumber: 86
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BaseEntityService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: " 93        while(var6.hasNext()) {\n 94           Booking searchResult = (Booking)var6.next();\n 95           BookingDTO dto = new BookingDTO(searchResult);\n 96           results.add(dto);\n 97        }\n 98  \n 99        return results;\n100     }\n101  \n102     @PUT\n103     @Path(\"/{id:[0-9][0-9]*}\")\n104     @Consumes({\"application/json\"})\n105     public Response update(@PathParam(\"id\") Long id, BookingDTO dto) {\n106        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT b FROM Booking b LEFT JOIN FETCH b.tickets LEFT JOIN FETCH b.performance WHERE b.id = :entityId ORDER BY b.id\", Booking.class);\n107        findByIdQuery.setParameter(\"entityId\", id);\n108  \n109        Booking entity;\n110        try {\n111           entity = (Booking)findByIdQuery.getSingleResult();\n112        } catch (NoResultException var7) {\n113           entity = null;"
        lineNumber: 103
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: "18  import javax.ws.rs.PathParam;\n19  import javax.ws.rs.Produces;\n20  import javax.ws.rs.QueryParam;\n21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.UriBuilder;\n23  import javax.ws.rs.core.Response.Status;\n24  import org.jboss.examples.ticketmonster.model.Booking;\n25  import org.jboss.examples.ticketmonster.rest.dto.BookingDTO;\n26  \n27  @Stateless\n28  @Path(\"forge/bookings\")\n29  public class BookingEndpoint {\n30     @PersistenceContext(\n31        unitName = \"primary\"\n32     )\n33     private EntityManager em;\n34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(BookingDTO dto) {\n38        Booking entity = dto.fromDTO((Booking)null, this.em);"
        lineNumber: 28
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: "34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(BookingDTO dto) {\n38        Booking entity = dto.fromDTO((Booking)null, this.em);\n39        this.em.persist(entity);\n40        return Response.created(UriBuilder.fromResource(BookingEndpoint.class).path(String.valueOf(entity.getId())).build(new Object[0])).build();\n41     }\n42  \n43     @DELETE\n44     @Path(\"/{id:[0-9][0-9]*}\")\n45     public Response deleteById(@PathParam(\"id\") Long id) {\n46        Booking entity = (Booking)this.em.find(Booking.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  "
        lineNumber: 44
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
        message: ""
        codeSnip: "46        Booking entity = (Booking)this.em.find(Booking.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  \n55     @GET\n56     @Path(\"/{id:[0-9][0-9]*}\")\n57     @Produces({\"application/json\"})\n58     public Response findById(@PathParam(\"id\") Long id) {\n59        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT b FROM Booking b LEFT JOIN FETCH b.tickets LEFT JOIN FETCH b.performance WHERE b.id = :entityId ORDER BY b.id\", Booking.class);\n60        findByIdQuery.setParameter(\"entityId\", id);\n61  \n62        Booking entity;\n63        try {\n64           entity = (Booking)findByIdQuery.getSingleResult();\n65        } catch (NoResultException var5) {\n66           entity = null;"
        lineNumber: 56
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
        codeSnip: "27  import org.jboss.examples.ticketmonster.model.Section;\n28  import org.jboss.examples.ticketmonster.model.Ticket;\n29  import org.jboss.examples.ticketmonster.model.TicketCategory;\n30  import org.jboss.examples.ticketmonster.model.TicketPrice;\n31  import org.jboss.examples.ticketmonster.service.AllocatedSeats;\n32  import org.jboss.examples.ticketmonster.service.SeatAllocationService;\n33  import org.jboss.examples.ticketmonster.util.MultivaluedHashMap;\n34  import org.jboss.examples.ticketmonster.util.qualifier.Cancelled;\n35  import org.jboss.examples.ticketmonster.util.qualifier.Created;\n36  \n37  @Path(\"/bookings\")\n38  @Stateless\n39  public class BookingService extends BaseEntityService {\n40     @Inject\n41     SeatAllocationService seatAllocationService;\n42     @Inject\n43     @Cancelled\n44     private Event cancelledBookingEvent;\n45     @Inject\n46     @Created\n47     private Event newBookingEvent;"
        lineNumber: 37
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
        message: ""
        codeSnip: "57  \n58        while(var2.hasNext()) {\n59           Booking booking = (Booking)var2.next();\n60           this.deleteBooking(booking.getId());\n61        }\n62  \n63        return Response.noContent().build();\n64     }\n65  \n66     @DELETE\n67     @Path(\"/{id:[0-9][0-9]*}\")\n68     public Response deleteBooking(@PathParam(\"id\") Long id) {\n69        Booking booking = (Booking)this.getEntityManager().find(Booking.class, id);\n70        if (booking == null) {\n71           return Response.status(Status.NOT_FOUND).build();\n72        } else {\n73           this.getEntityManager().remove(booking);\n74           Map seatsBySection = new TreeMap(SectionComparator.instance());\n75  \n76           Iterator var4;\n77           Ticket ticket;"
        lineNumber: 67
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BookingService.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: " 2  \n 3  import java.util.List;\n 4  import javax.inject.Inject;\n 5  import javax.ws.rs.GET;\n 6  import javax.ws.rs.PUT;\n 7  import javax.ws.rs.Path;\n 8  import javax.ws.rs.Produces;\n 9  import javax.ws.rs.core.Response;\n10  import org.jboss.examples.ticketmonster.service.BotService;\n11  \n12  @Path(\"/bot\")\n13  public class BotStatusService {\n14     @Inject\n15     private BotService botService;\n16  \n17     @Path(\"messages\")\n18     @GET\n19     @Produces({\"application/json\"})\n20     public List getMessages() {\n21        return this.botService.fetchLog();\n22     }"
        lineNumber: 12
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: " 7  import javax.ws.rs.Path;\n 8  import javax.ws.rs.Produces;\n 9  import javax.ws.rs.core.Response;\n10  import org.jboss.examples.ticketmonster.service.BotService;\n11  \n12  @Path(\"/bot\")\n13  public class BotStatusService {\n14     @Inject\n15     private BotService botService;\n16  \n17     @Path(\"messages\")\n18     @GET\n19     @Produces({\"application/json\"})\n20     public List getMessages() {\n21        return this.botService.fetchLog();\n22     }\n23  \n24     @Path(\"status\")\n25     @GET\n26     @Produces({\"application/json\"})\n27     public Response getBotStatus() {"
        lineNumber: 17
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Method
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "14     @Inject\n15     private BotService botService;\n16  \n17     @Path(\"messages\")\n18     @GET\n19     @Produces({\"application/json\"})\n20     public List getMessages() {\n21        return this.botService.fetchLog();\n22     }\n23  \n24     @Path(\"status\")\n25     @GET\n26     @Produces({\"application/json\"})\n27     public Response getBotStatus() {\n28        BotState state = this.botService.isBotActive() ? BotState.RUNNING : BotState.NOT_RUNNING;\n29        return Response.ok(state).build();\n30     }\n31  \n32     @Path(\"status\")\n33     @PUT\n34     public Response updateBotStatus(BotState updatedState) {"
        lineNumber: 24
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Method
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
        message: ""
        codeSnip: "22     }\n23  \n24     @Path(\"status\")\n25     @GET\n26     @Produces({\"application/json\"})\n27     public Response getBotStatus() {\n28        BotState state = this.botService.isBotActive() ? BotState.RUNNING : BotState.NOT_RUNNING;\n29        return Response.ok(state).build();\n30     }\n31  \n32     @Path(\"status\")\n33     @PUT\n34     public Response updateBotStatus(BotState updatedState) {\n35        if (updatedState.equals(BotState.RUNNING)) {\n36           this.botService.start();\n37        } else if (updatedState.equals(BotState.NOT_RUNNING)) {\n38           this.botService.stop();\n39        } else if (updatedState.equals(BotState.RESET)) {\n40           this.botService.deleteAll();\n41        }\n42  "
        lineNumber: 32
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/BotStatusService.java
          kind: Method
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: " 93        while(var6.hasNext()) {\n 94           EventCategory searchResult = (EventCategory)var6.next();\n 95           EventCategoryDTO dto = new EventCategoryDTO(searchResult);\n 96           results.add(dto);\n 97        }\n 98  \n 99        return results;\n100     }\n101  \n102     @PUT\n103     @Path(\"/{id:[0-9][0-9]*}\")\n104     @Consumes({\"application/json\"})\n105     public Response update(@PathParam(\"id\") Long id, EventCategoryDTO dto) {\n106        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT e FROM EventCategory e WHERE e.id = :entityId ORDER BY e.id\", EventCategory.class);\n107        findByIdQuery.setParameter(\"entityId\", id);\n108  \n109        EventCategory entity;\n110        try {\n111           entity = (EventCategory)findByIdQuery.getSingleResult();\n112        } catch (NoResultException var7) {\n113           entity = null;"
        lineNumber: 103
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: "18  import javax.ws.rs.PathParam;\n19  import javax.ws.rs.Produces;\n20  import javax.ws.rs.QueryParam;\n21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.UriBuilder;\n23  import javax.ws.rs.core.Response.Status;\n24  import org.jboss.examples.ticketmonster.model.EventCategory;\n25  import org.jboss.examples.ticketmonster.rest.dto.EventCategoryDTO;\n26  \n27  @Stateless\n28  @Path(\"/eventcategories\")\n29  public class EventCategoryEndpoint {\n30     @PersistenceContext(\n31        unitName = \"primary\"\n32     )\n33     private EntityManager em;\n34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(EventCategoryDTO dto) {\n38        EventCategory entity = dto.fromDTO((EventCategory)null, this.em);"
        lineNumber: 28
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: "34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(EventCategoryDTO dto) {\n38        EventCategory entity = dto.fromDTO((EventCategory)null, this.em);\n39        this.em.persist(entity);\n40        return Response.created(UriBuilder.fromResource(EventCategoryEndpoint.class).path(String.valueOf(entity.getId())).build(new Object[0])).build();\n41     }\n42  \n43     @DELETE\n44     @Path(\"/{id:[0-9][0-9]*}\")\n45     public Response deleteById(@PathParam(\"id\") Long id) {\n46        EventCategory entity = (EventCategory)this.em.find(EventCategory.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  "
        lineNumber: 44
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
        message: ""
        codeSnip: "46        EventCategory entity = (EventCategory)this.em.find(EventCategory.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  \n55     @GET\n56     @Path(\"/{id:[0-9][0-9]*}\")\n57     @Produces({\"application/json\"})\n58     public Response findById(@PathParam(\"id\") Long id) {\n59        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT e FROM EventCategory e WHERE e.id = :entityId ORDER BY e.id\", EventCategory.class);\n60        findByIdQuery.setParameter(\"entityId\", id);\n61  \n62        EventCategory entity;\n63        try {\n64           entity = (EventCategory)findByIdQuery.getSingleResult();\n65        } catch (NoResultException var5) {\n66           entity = null;"
        lineNumber: 56
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventCategoryEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: " 93        while(var6.hasNext()) {\n 94           Event searchResult = (Event)var6.next();\n 95           EventDTO dto = new EventDTO(searchResult);\n 96           results.add(dto);\n 97        }\n 98  \n 99        return results;\n100     }\n101  \n102     @PUT\n103     @Path(\"/{id:[0-9][0-9]*}\")\n104     @Consumes({\"application/json\"})\n105     public Response update(@PathParam(\"id\") Long id, EventDTO dto) {\n106        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT e FROM Event e LEFT JOIN FETCH e.mediaItem LEFT JOIN FETCH e.category WHERE e.id = :entityId ORDER BY e.id\", Event.class);\n107        findByIdQuery.setParameter(\"entityId\", id);\n108  \n109        Event entity;\n110        try {\n111           entity = (Event)findByIdQuery.getSingleResult();\n112        } catch (NoResultException var7) {\n113           entity = null;"
        lineNumber: 103
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: "18  import javax.ws.rs.PathParam;\n19  import javax.ws.rs.Produces;\n20  import javax.ws.rs.QueryParam;\n21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.UriBuilder;\n23  import javax.ws.rs.core.Response.Status;\n24  import org.jboss.examples.ticketmonster.model.Event;\n25  import org.jboss.examples.ticketmonster.rest.dto.EventDTO;\n26  \n27  @Stateless\n28  @Path(\"forge/events\")\n29  public class EventEndpoint {\n30     @PersistenceContext(\n31        unitName = \"primary\"\n32     )\n33     private EntityManager em;\n34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(EventDTO dto) {\n38        Event entity = dto.fromDTO((Event)null, this.em);"
        lineNumber: 28
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: "34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(EventDTO dto) {\n38        Event entity = dto.fromDTO((Event)null, this.em);\n39        this.em.persist(entity);\n40        return Response.created(UriBuilder.fromResource(EventEndpoint.class).path(String.valueOf(entity.getId())).build(new Object[0])).build();\n41     }\n42  \n43     @DELETE\n44     @Path(\"/{id:[0-9][0-9]*}\")\n45     public Response deleteById(@PathParam(\"id\") Long id) {\n46        Event entity = (Event)this.em.find(Event.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  "
        lineNumber: 44
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
        message: ""
        codeSnip: "46        Event entity = (Event)this.em.find(Event.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  \n55     @GET\n56     @Path(\"/{id:[0-9][0-9]*}\")\n57     @Produces({\"application/json\"})\n58     public Response findById(@PathParam(\"id\") Long id) {\n59        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT e FROM Event e LEFT JOIN FETCH e.mediaItem LEFT JOIN FETCH e.category WHERE e.id = :entityId ORDER BY e.id\", Event.class);\n60        findByIdQuery.setParameter(\"entityId\", id);\n61  \n62        Event entity;\n63        try {\n64           entity = (Event)findByIdQuery.getSingleResult();\n65        } catch (NoResultException var5) {\n66           entity = null;"
        lineNumber: 56
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
        message: ""
        codeSnip: " 3  import java.util.ArrayList;\n 4  import java.util.List;\n 5  import javax.ejb.Stateless;\n 6  import javax.persistence.criteria.CriteriaBuilder;\n 7  import javax.persistence.criteria.Predicate;\n 8  import javax.persistence.criteria.Root;\n 9  import javax.ws.rs.Path;\n10  import javax.ws.rs.core.MultivaluedMap;\n11  import org.jboss.examples.ticketmonster.model.Event;\n12  \n13  @Path(\"/events\")\n14  @Stateless\n15  public class EventService extends BaseEntityService {\n16     public EventService() {\n17        super(Event.class);\n18     }\n19  \n20     protected Predicate[] extractPredicates(MultivaluedMap queryParameters, CriteriaBuilder criteriaBuilder, Root root) {\n21        List predicates = new ArrayList();\n22        if (queryParameters.containsKey(\"category\")) {\n23           String category = (String)queryParameters.getFirst(\"category\");"
        lineNumber: 13
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/EventService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: " 93        while(var6.hasNext()) {\n 94           MediaItem searchResult = (MediaItem)var6.next();\n 95           MediaItemDTO dto = new MediaItemDTO(searchResult);\n 96           results.add(dto);\n 97        }\n 98  \n 99        return results;\n100     }\n101  \n102     @PUT\n103     @Path(\"/{id:[0-9][0-9]*}\")\n104     @Consumes({\"application/json\"})\n105     public Response update(@PathParam(\"id\") Long id, MediaItemDTO dto) {\n106        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT m FROM MediaItem m WHERE m.id = :entityId ORDER BY m.id\", MediaItem.class);\n107        findByIdQuery.setParameter(\"entityId\", id);\n108  \n109        MediaItem entity;\n110        try {\n111           entity = (MediaItem)findByIdQuery.getSingleResult();\n112        } catch (NoResultException var7) {\n113           entity = null;"
        lineNumber: 103
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: "18  import javax.ws.rs.PathParam;\n19  import javax.ws.rs.Produces;\n20  import javax.ws.rs.QueryParam;\n21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.UriBuilder;\n23  import javax.ws.rs.core.Response.Status;\n24  import org.jboss.examples.ticketmonster.model.MediaItem;\n25  import org.jboss.examples.ticketmonster.rest.dto.MediaItemDTO;\n26  \n27  @Stateless\n28  @Path(\"/mediaitems\")\n29  public class MediaItemEndpoint {\n30     @PersistenceContext(\n31        unitName = \"primary\"\n32     )\n33     private EntityManager em;\n34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(MediaItemDTO dto) {\n38        MediaItem entity = dto.fromDTO((MediaItem)null, this.em);"
        lineNumber: 28
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: "34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(MediaItemDTO dto) {\n38        MediaItem entity = dto.fromDTO((MediaItem)null, this.em);\n39        this.em.persist(entity);\n40        return Response.created(UriBuilder.fromResource(MediaItemEndpoint.class).path(String.valueOf(entity.getId())).build(new Object[0])).build();\n41     }\n42  \n43     @DELETE\n44     @Path(\"/{id:[0-9][0-9]*}\")\n45     public Response deleteById(@PathParam(\"id\") Long id) {\n46        MediaItem entity = (MediaItem)this.em.find(MediaItem.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  "
        lineNumber: 44
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
        message: ""
        codeSnip: "46        MediaItem entity = (MediaItem)this.em.find(MediaItem.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  \n55     @GET\n56     @Path(\"/{id:[0-9][0-9]*}\")\n57     @Produces({\"application/json\"})\n58     public Response findById(@PathParam(\"id\") Long id) {\n59        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT m FROM MediaItem m WHERE m.id = :entityId ORDER BY m.id\", MediaItem.class);\n60        findByIdQuery.setParameter(\"entityId\", id);\n61  \n62        MediaItem entity;\n63        try {\n64           entity = (MediaItem)findByIdQuery.getSingleResult();\n65        } catch (NoResultException var5) {\n66           entity = null;"
        lineNumber: 56
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaItemEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: " 3  import java.io.File;\n 4  import javax.inject.Inject;\n 5  import javax.persistence.EntityManager;\n 6  import javax.ws.rs.GET;\n 7  import javax.ws.rs.Path;\n 8  import javax.ws.rs.PathParam;\n 9  import javax.ws.rs.Produces;\n10  import org.jboss.examples.ticketmonster.model.MediaItem;\n11  import org.jboss.examples.ticketmonster.service.MediaManager;\n12  \n13  @Path(\"/media\")\n14  public class MediaService {\n15     @Inject\n16     private MediaManager mediaManager;\n17     @Inject\n18     EntityManager entityManager;\n19  \n20     @GET\n21     @Path(\"/cache/{cachedFileName:\\\\S*}\")\n22     @Produces({\"*/*\"})\n23     public File getCachedMediaContent(@PathParam(\"cachedFileName\") String cachedFileName) {"
        lineNumber: 13
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: "11  import org.jboss.examples.ticketmonster.service.MediaManager;\n12  \n13  @Path(\"/media\")\n14  public class MediaService {\n15     @Inject\n16     private MediaManager mediaManager;\n17     @Inject\n18     EntityManager entityManager;\n19  \n20     @GET\n21     @Path(\"/cache/{cachedFileName:\\\\S*}\")\n22     @Produces({\"*/*\"})\n23     public File getCachedMediaContent(@PathParam(\"cachedFileName\") String cachedFileName) {\n24        return this.mediaManager.getCachedFile(cachedFileName);\n25     }\n26  \n27     @GET\n28     @Path(\"/{id:\\\\d*}\")\n29     @Produces({\"*/*\"})\n30     public File getMediaContent(@PathParam(\"id\") Long id) {\n31        return this.mediaManager.getCachedFile(this.mediaManager.getPath((MediaItem)this.entityManager.find(MediaItem.class, id)).getUrl());"
        lineNumber: 21
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
        message: ""
        codeSnip: "18     EntityManager entityManager;\n19  \n20     @GET\n21     @Path(\"/cache/{cachedFileName:\\\\S*}\")\n22     @Produces({\"*/*\"})\n23     public File getCachedMediaContent(@PathParam(\"cachedFileName\") String cachedFileName) {\n24        return this.mediaManager.getCachedFile(cachedFileName);\n25     }\n26  \n27     @GET\n28     @Path(\"/{id:\\\\d*}\")\n29     @Produces({\"*/*\"})\n30     public File getMediaContent(@PathParam(\"id\") Long id) {\n31        return this.mediaManager.getCachedFile(this.mediaManager.getPath((MediaItem)this.entityManager.find(MediaItem.class, id)).getUrl());\n32     }\n33  }\n"
        lineNumber: 28
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MediaService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
        message: ""
        codeSnip: " 8  import javax.ejb.Stateless;\n 9  import javax.inject.Inject;\n10  import javax.persistence.EntityManager;\n11  import javax.persistence.Query;\n12  import javax.persistence.TypedQuery;\n13  import javax.ws.rs.GET;\n14  import javax.ws.rs.Path;\n15  import javax.ws.rs.Produces;\n16  import org.jboss.examples.ticketmonster.model.Show;\n17  \n18  @Path(\"/metrics\")\n19  @Stateless\n20  public class MetricsService {\n21     @Inject\n22     private EntityManager entityManager;\n23  \n24     @GET\n25     @Produces({\"application/json\"})\n26     public List getMetrics() {\n27        return this.retrieveMetricsFromShows(this.retrieveShows(), this.retrieveOccupiedCounts());\n28     }"
        lineNumber: 18
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/MetricsService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "120        while(var6.hasNext()) {\n121           Performance searchResult = (Performance)var6.next();\n122           PerformanceDTO dto = new PerformanceDTO(searchResult);\n123           results.add(dto);\n124        }\n125  \n126        return results;\n127     }\n128  \n129     @PUT\n130     @Path(\"/{id:[0-9][0-9]*}\")\n131     @Consumes({\"application/json\"})\n132     public Response update(@PathParam(\"id\") Long id, PerformanceDTO dto) {\n133        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT p FROM Performance p LEFT JOIN FETCH p.show WHERE p.id = :entityId ORDER BY p.id\", Performance.class);\n134        findByIdQuery.setParameter(\"entityId\", id);\n135  \n136        Performance entity;\n137        try {\n138           entity = (Performance)findByIdQuery.getSingleResult();\n139        } catch (NoResultException var7) {\n140           entity = null;"
        lineNumber: 130
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "25  import javax.ws.rs.core.Response;\n26  import javax.ws.rs.core.UriBuilder;\n27  import javax.ws.rs.core.Response.Status;\n28  import org.jboss.examples.ticketmonster.model.Booking;\n29  import org.jboss.examples.ticketmonster.model.Performance;\n30  import org.jboss.examples.ticketmonster.model.SectionAllocation;\n31  import org.jboss.examples.ticketmonster.model.Show;\n32  import org.jboss.examples.ticketmonster.rest.dto.PerformanceDTO;\n33  \n34  @Stateless\n35  @Path(\"/performances\")\n36  public class PerformanceEndpoint {\n37     @PersistenceContext(\n38        unitName = \"primary\"\n39     )\n40     private EntityManager em;\n41  \n42     @POST\n43     @Consumes({\"application/json\"})\n44     public Response create(PerformanceDTO dto) {\n45        Performance entity = dto.fromDTO((Performance)null, this.em);"
        lineNumber: 35
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "41  \n42     @POST\n43     @Consumes({\"application/json\"})\n44     public Response create(PerformanceDTO dto) {\n45        Performance entity = dto.fromDTO((Performance)null, this.em);\n46        this.em.persist(entity);\n47        return Response.created(UriBuilder.fromResource(PerformanceEndpoint.class).path(String.valueOf(entity.getId())).build(new Object[0])).build();\n48     }\n49  \n50     @DELETE\n51     @Path(\"/{id:[0-9][0-9]*}\")\n52     public Response deleteById(@PathParam(\"id\") Long id) {\n53        Performance entity = (Performance)this.em.find(Performance.class, id);\n54        if (entity == null) {\n55           return Response.status(Status.NOT_FOUND).build();\n56        } else {\n57           Show show = entity.getShow();\n58           show.getPerformances().remove(entity);\n59           entity.setShow((Show)null);\n60           this.em.merge(show);\n61           List sectionAllocations = this.findSectionAllocationsByPerformance(entity);"
        lineNumber: 51
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
        message: ""
        codeSnip: "73              Booking booking = (Booking)var9.next();\n74              this.em.remove(booking);\n75           }\n76  \n77           this.em.remove(entity);\n78           return Response.noContent().build();\n79        }\n80     }\n81  \n82     @GET\n83     @Path(\"/{id:[0-9][0-9]*}\")\n84     @Produces({\"application/json\"})\n85     public Response findById(@PathParam(\"id\") Long id) {\n86        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT p FROM Performance p LEFT JOIN FETCH p.show WHERE p.id = :entityId ORDER BY p.id\", Performance.class);\n87        findByIdQuery.setParameter(\"entityId\", id);\n88  \n89        Performance entity;\n90        try {\n91           entity = (Performance)findByIdQuery.getSingleResult();\n92        } catch (NoResultException var5) {\n93           entity = null;"
        lineNumber: 83
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/PerformanceEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: " 93        while(var6.hasNext()) {\n 94           SectionAllocation searchResult = (SectionAllocation)var6.next();\n 95           SectionAllocationDTO dto = new SectionAllocationDTO(searchResult);\n 96           results.add(dto);\n 97        }\n 98  \n 99        return results;\n100     }\n101  \n102     @PUT\n103     @Path(\"/{id:[0-9][0-9]*}\")\n104     @Consumes({\"application/json\"})\n105     public Response update(@PathParam(\"id\") Long id, SectionAllocationDTO dto) {\n106        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT s FROM SectionAllocation s LEFT JOIN FETCH s.performance LEFT JOIN FETCH s.section WHERE s.id = :entityId ORDER BY s.id\", SectionAllocation.class);\n107        findByIdQuery.setParameter(\"entityId\", id);\n108  \n109        SectionAllocation entity;\n110        try {\n111           entity = (SectionAllocation)findByIdQuery.getSingleResult();\n112        } catch (NoResultException var7) {\n113           entity = null;"
        lineNumber: 103
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: "18  import javax.ws.rs.PathParam;\n19  import javax.ws.rs.Produces;\n20  import javax.ws.rs.QueryParam;\n21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.UriBuilder;\n23  import javax.ws.rs.core.Response.Status;\n24  import org.jboss.examples.ticketmonster.model.SectionAllocation;\n25  import org.jboss.examples.ticketmonster.rest.dto.SectionAllocationDTO;\n26  \n27  @Stateless\n28  @Path(\"/sectionallocations\")\n29  public class SectionAllocationEndpoint {\n30     @PersistenceContext(\n31        unitName = \"primary\"\n32     )\n33     private EntityManager em;\n34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(SectionAllocationDTO dto) {\n38        SectionAllocation entity = dto.fromDTO((SectionAllocation)null, this.em);"
        lineNumber: 28
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: "34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(SectionAllocationDTO dto) {\n38        SectionAllocation entity = dto.fromDTO((SectionAllocation)null, this.em);\n39        this.em.persist(entity);\n40        return Response.created(UriBuilder.fromResource(SectionAllocationEndpoint.class).path(String.valueOf(entity.getId())).build(new Object[0])).build();\n41     }\n42  \n43     @DELETE\n44     @Path(\"/{id:[0-9][0-9]*}\")\n45     public Response deleteById(@PathParam(\"id\") Long id) {\n46        SectionAllocation entity = (SectionAllocation)this.em.find(SectionAllocation.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  "
        lineNumber: 44
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
        message: ""
        codeSnip: "46        SectionAllocation entity = (SectionAllocation)this.em.find(SectionAllocation.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  \n55     @GET\n56     @Path(\"/{id:[0-9][0-9]*}\")\n57     @Produces({\"application/json\"})\n58     public Response findById(@PathParam(\"id\") Long id) {\n59        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT s FROM SectionAllocation s LEFT JOIN FETCH s.performance LEFT JOIN FETCH s.section WHERE s.id = :entityId ORDER BY s.id\", SectionAllocation.class);\n60        findByIdQuery.setParameter(\"entityId\", id);\n61  \n62        SectionAllocation entity;\n63        try {\n64           entity = (SectionAllocation)findByIdQuery.getSingleResult();\n65        } catch (NoResultException var5) {\n66           entity = null;"
        lineNumber: 56
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionAllocationEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: " 93        while(var6.hasNext()) {\n 94           Section searchResult = (Section)var6.next();\n 95           SectionDTO dto = new SectionDTO(searchResult);\n 96           results.add(dto);\n 97        }\n 98  \n 99        return results;\n100     }\n101  \n102     @PUT\n103     @Path(\"/{id:[0-9][0-9]*}\")\n104     @Consumes({\"application/json\"})\n105     public Response update(@PathParam(\"id\") Long id, SectionDTO dto) {\n106        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT s FROM Section s LEFT JOIN FETCH s.venue WHERE s.id = :entityId ORDER BY s.id\", Section.class);\n107        findByIdQuery.setParameter(\"entityId\", id);\n108  \n109        Section entity;\n110        try {\n111           entity = (Section)findByIdQuery.getSingleResult();\n112        } catch (NoResultException var7) {\n113           entity = null;"
        lineNumber: 103
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: "18  import javax.ws.rs.PathParam;\n19  import javax.ws.rs.Produces;\n20  import javax.ws.rs.QueryParam;\n21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.UriBuilder;\n23  import javax.ws.rs.core.Response.Status;\n24  import org.jboss.examples.ticketmonster.model.Section;\n25  import org.jboss.examples.ticketmonster.rest.dto.SectionDTO;\n26  \n27  @Stateless\n28  @Path(\"/sections\")\n29  public class SectionEndpoint {\n30     @PersistenceContext(\n31        unitName = \"primary\"\n32     )\n33     private EntityManager em;\n34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(SectionDTO dto) {\n38        Section entity = dto.fromDTO((Section)null, this.em);"
        lineNumber: 28
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: "34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(SectionDTO dto) {\n38        Section entity = dto.fromDTO((Section)null, this.em);\n39        this.em.persist(entity);\n40        return Response.created(UriBuilder.fromResource(SectionEndpoint.class).path(String.valueOf(entity.getId())).build(new Object[0])).build();\n41     }\n42  \n43     @DELETE\n44     @Path(\"/{id:[0-9][0-9]*}\")\n45     public Response deleteById(@PathParam(\"id\") Long id) {\n46        Section entity = (Section)this.em.find(Section.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  "
        lineNumber: 44
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
        message: ""
        codeSnip: "46        Section entity = (Section)this.em.find(Section.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  \n55     @GET\n56     @Path(\"/{id:[0-9][0-9]*}\")\n57     @Produces({\"application/json\"})\n58     public Response findById(@PathParam(\"id\") Long id) {\n59        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT s FROM Section s LEFT JOIN FETCH s.venue WHERE s.id = :entityId ORDER BY s.id\", Section.class);\n60        findByIdQuery.setParameter(\"entityId\", id);\n61  \n62        Section entity;\n63        try {\n64           entity = (Section)findByIdQuery.getSingleResult();\n65        } catch (NoResultException var5) {\n66           entity = null;"
        lineNumber: 56
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/SectionEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: " 93        while(var6.hasNext()) {\n 94           Show searchResult = (Show)var6.next();\n 95           ShowDTO dto = new ShowDTO(searchResult);\n 96           results.add(dto);\n 97        }\n 98  \n 99        return results;\n100     }\n101  \n102     @PUT\n103     @Path(\"/{id:[0-9][0-9]*}\")\n104     @Consumes({\"application/json\"})\n105     public Response update(@PathParam(\"id\") Long id, ShowDTO dto) {\n106        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT s FROM Show s LEFT JOIN FETCH s.event LEFT JOIN FETCH s.venue LEFT JOIN FETCH s.performances LEFT JOIN FETCH s.ticketPrices WHERE s.id = :entityId ORDER BY s.id\", Show.class);\n107        findByIdQuery.setParameter(\"entityId\", id);\n108  \n109        Show entity;\n110        try {\n111           entity = (Show)findByIdQuery.getSingleResult();\n112        } catch (NoResultException var7) {\n113           entity = null;"
        lineNumber: 103
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: "18  import javax.ws.rs.PathParam;\n19  import javax.ws.rs.Produces;\n20  import javax.ws.rs.QueryParam;\n21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.UriBuilder;\n23  import javax.ws.rs.core.Response.Status;\n24  import org.jboss.examples.ticketmonster.model.Show;\n25  import org.jboss.examples.ticketmonster.rest.dto.ShowDTO;\n26  \n27  @Stateless\n28  @Path(\"forge/shows\")\n29  public class ShowEndpoint {\n30     @PersistenceContext(\n31        unitName = \"primary\"\n32     )\n33     private EntityManager em;\n34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(ShowDTO dto) {\n38        Show entity = dto.fromDTO((Show)null, this.em);"
        lineNumber: 28
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: "34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(ShowDTO dto) {\n38        Show entity = dto.fromDTO((Show)null, this.em);\n39        this.em.persist(entity);\n40        return Response.created(UriBuilder.fromResource(ShowEndpoint.class).path(String.valueOf(entity.getId())).build(new Object[0])).build();\n41     }\n42  \n43     @DELETE\n44     @Path(\"/{id:[0-9][0-9]*}\")\n45     public Response deleteById(@PathParam(\"id\") Long id) {\n46        Show entity = (Show)this.em.find(Show.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  "
        lineNumber: 44
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
        message: ""
        codeSnip: "46        Show entity = (Show)this.em.find(Show.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  \n55     @GET\n56     @Path(\"/{id:[0-9][0-9]*}\")\n57     @Produces({\"application/json\"})\n58     public Response findById(@PathParam(\"id\") Long id) {\n59        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT s FROM Show s LEFT JOIN FETCH s.event LEFT JOIN FETCH s.venue LEFT JOIN FETCH s.performances LEFT JOIN FETCH s.ticketPrices WHERE s.id = :entityId ORDER BY s.id\", Show.class);\n60        findByIdQuery.setParameter(\"entityId\", id);\n61  \n62        Show entity;\n63        try {\n64           entity = (Show)findByIdQuery.getSingleResult();\n65        } catch (NoResultException var5) {\n66           entity = null;"
        lineNumber: 56
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
        message: ""
        codeSnip: " 7  import javax.persistence.criteria.CriteriaBuilder;\n 8  import javax.persistence.criteria.Predicate;\n 9  import javax.persistence.criteria.Root;\n10  import javax.ws.rs.GET;\n11  import javax.ws.rs.Path;\n12  import javax.ws.rs.PathParam;\n13  import javax.ws.rs.Produces;\n14  import javax.ws.rs.core.MultivaluedMap;\n15  import org.jboss.examples.ticketmonster.model.Show;\n16  \n17  @Path(\"/shows\")\n18  @Stateless\n19  public class ShowService extends BaseEntityService {\n20     public ShowService() {\n21        super(Show.class);\n22     }\n23  \n24     protected Predicate[] extractPredicates(MultivaluedMap queryParameters, CriteriaBuilder criteriaBuilder, Root root) {\n25        List predicates = new ArrayList();\n26        String event;\n27        if (queryParameters.containsKey(\"venue\")) {"
        lineNumber: 17
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
        message: ""
        codeSnip: "31  \n32        if (queryParameters.containsKey(\"event\")) {\n33           event = (String)queryParameters.getFirst(\"event\");\n34           predicates.add(criteriaBuilder.equal(root.get(\"event\").get(\"id\"), event));\n35        }\n36  \n37        return (Predicate[])predicates.toArray(new Predicate[0]);\n38     }\n39  \n40     @GET\n41     @Path(\"/performance/{performanceId:[0-9][0-9]*}\")\n42     @Produces({\"application/json\"})\n43     public Show getShowByPerformance(@PathParam(\"performanceId\") Long performanceId) {\n44        Query query = this.getEntityManager().createQuery(\"select s from Show s where exists(select p from Performance p where p.show = s and p.id = :performanceId)\");\n45        query.setParameter(\"performanceId\", performanceId);\n46        return (Show)query.getSingleResult();\n47     }\n48  }\n"
        lineNumber: 41
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/ShowService.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: " 93        while(var6.hasNext()) {\n 94           TicketCategory searchResult = (TicketCategory)var6.next();\n 95           TicketCategoryDTO dto = new TicketCategoryDTO(searchResult);\n 96           results.add(dto);\n 97        }\n 98  \n 99        return results;\n100     }\n101  \n102     @PUT\n103     @Path(\"/{id:[0-9][0-9]*}\")\n104     @Consumes({\"application/json\"})\n105     public Response update(@PathParam(\"id\") Long id, TicketCategoryDTO dto) {\n106        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT t FROM TicketCategory t WHERE t.id = :entityId ORDER BY t.id\", TicketCategory.class);\n107        findByIdQuery.setParameter(\"entityId\", id);\n108  \n109        TicketCategory entity;\n110        try {\n111           entity = (TicketCategory)findByIdQuery.getSingleResult();\n112        } catch (NoResultException var7) {\n113           entity = null;"
        lineNumber: 103
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: "18  import javax.ws.rs.PathParam;\n19  import javax.ws.rs.Produces;\n20  import javax.ws.rs.QueryParam;\n21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.UriBuilder;\n23  import javax.ws.rs.core.Response.Status;\n24  import org.jboss.examples.ticketmonster.model.TicketCategory;\n25  import org.jboss.examples.ticketmonster.rest.dto.TicketCategoryDTO;\n26  \n27  @Stateless\n28  @Path(\"/ticketcategories\")\n29  public class TicketCategoryEndpoint {\n30     @PersistenceContext(\n31        unitName = \"primary\"\n32     )\n33     private EntityManager em;\n34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(TicketCategoryDTO dto) {\n38        TicketCategory entity = dto.fromDTO((TicketCategory)null, this.em);"
        lineNumber: 28
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: "34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(TicketCategoryDTO dto) {\n38        TicketCategory entity = dto.fromDTO((TicketCategory)null, this.em);\n39        this.em.persist(entity);\n40        return Response.created(UriBuilder.fromResource(TicketCategoryEndpoint.class).path(String.valueOf(entity.getId())).build(new Object[0])).build();\n41     }\n42  \n43     @DELETE\n44     @Path(\"/{id:[0-9][0-9]*}\")\n45     public Response deleteById(@PathParam(\"id\") Long id) {\n46        TicketCategory entity = (TicketCategory)this.em.find(TicketCategory.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  "
        lineNumber: 44
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
        message: ""
        codeSnip: "46        TicketCategory entity = (TicketCategory)this.em.find(TicketCategory.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  \n55     @GET\n56     @Path(\"/{id:[0-9][0-9]*}\")\n57     @Produces({\"application/json\"})\n58     public Response findById(@PathParam(\"id\") Long id) {\n59        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT t FROM TicketCategory t WHERE t.id = :entityId ORDER BY t.id\", TicketCategory.class);\n60        findByIdQuery.setParameter(\"entityId\", id);\n61  \n62        TicketCategory entity;\n63        try {\n64           entity = (TicketCategory)findByIdQuery.getSingleResult();\n65        } catch (NoResultException var5) {\n66           entity = null;"
        lineNumber: 56
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketCategoryEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: " 93        while(var6.hasNext()) {\n 94           Ticket searchResult = (Ticket)var6.next();\n 95           TicketDTO dto = new TicketDTO(searchResult);\n 96           results.add(dto);\n 97        }\n 98  \n 99        return results;\n100     }\n101  \n102     @PUT\n103     @Path(\"/{id:[0-9][0-9]*}\")\n104     @Consumes({\"application/json\"})\n105     public Response update(@PathParam(\"id\") Long id, TicketDTO dto) {\n106        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT t FROM Ticket t LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", Ticket.class);\n107        findByIdQuery.setParameter(\"entityId\", id);\n108  \n109        Ticket entity;\n110        try {\n111           entity = (Ticket)findByIdQuery.getSingleResult();\n112        } catch (NoResultException var7) {\n113           entity = null;"
        lineNumber: 103
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: "18  import javax.ws.rs.PathParam;\n19  import javax.ws.rs.Produces;\n20  import javax.ws.rs.QueryParam;\n21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.UriBuilder;\n23  import javax.ws.rs.core.Response.Status;\n24  import org.jboss.examples.ticketmonster.model.Ticket;\n25  import org.jboss.examples.ticketmonster.rest.dto.TicketDTO;\n26  \n27  @Stateless\n28  @Path(\"/tickets\")\n29  public class TicketEndpoint {\n30     @PersistenceContext(\n31        unitName = \"primary\"\n32     )\n33     private EntityManager em;\n34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(TicketDTO dto) {\n38        Ticket entity = dto.fromDTO((Ticket)null, this.em);"
        lineNumber: 28
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: "34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(TicketDTO dto) {\n38        Ticket entity = dto.fromDTO((Ticket)null, this.em);\n39        this.em.persist(entity);\n40        return Response.created(UriBuilder.fromResource(TicketEndpoint.class).path(String.valueOf(entity.getId())).build(new Object[0])).build();\n41     }\n42  \n43     @DELETE\n44     @Path(\"/{id:[0-9][0-9]*}\")\n45     public Response deleteById(@PathParam(\"id\") Long id) {\n46        Ticket entity = (Ticket)this.em.find(Ticket.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  "
        lineNumber: 44
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
        message: ""
        codeSnip: "46        Ticket entity = (Ticket)this.em.find(Ticket.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  \n55     @GET\n56     @Path(\"/{id:[0-9][0-9]*}\")\n57     @Produces({\"application/json\"})\n58     public Response findById(@PathParam(\"id\") Long id) {\n59        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT t FROM Ticket t LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", Ticket.class);\n60        findByIdQuery.setParameter(\"entityId\", id);\n61  \n62        Ticket entity;\n63        try {\n64           entity = (Ticket)findByIdQuery.getSingleResult();\n65        } catch (NoResultException var5) {\n66           entity = null;"
        lineNumber: 56
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: " 93        while(var6.hasNext()) {\n 94           TicketPrice searchResult = (TicketPrice)var6.next();\n 95           TicketPriceDTO dto = new TicketPriceDTO(searchResult);\n 96           results.add(dto);\n 97        }\n 98  \n 99        return results;\n100     }\n101  \n102     @PUT\n103     @Path(\"/{id:[0-9][0-9]*}\")\n104     @Consumes({\"application/json\"})\n105     public Response update(@PathParam(\"id\") Long id, TicketPriceDTO dto) {\n106        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT t FROM TicketPrice t LEFT JOIN FETCH t.show LEFT JOIN FETCH t.section LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", TicketPrice.class);\n107        findByIdQuery.setParameter(\"entityId\", id);\n108  \n109        TicketPrice entity;\n110        try {\n111           entity = (TicketPrice)findByIdQuery.getSingleResult();\n112        } catch (NoResultException var7) {\n113           entity = null;"
        lineNumber: 103
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: "18  import javax.ws.rs.PathParam;\n19  import javax.ws.rs.Produces;\n20  import javax.ws.rs.QueryParam;\n21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.UriBuilder;\n23  import javax.ws.rs.core.Response.Status;\n24  import org.jboss.examples.ticketmonster.model.TicketPrice;\n25  import org.jboss.examples.ticketmonster.rest.dto.TicketPriceDTO;\n26  \n27  @Stateless\n28  @Path(\"/ticketprices\")\n29  public class TicketPriceEndpoint {\n30     @PersistenceContext(\n31        unitName = \"primary\"\n32     )\n33     private EntityManager em;\n34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(TicketPriceDTO dto) {\n38        TicketPrice entity = dto.fromDTO((TicketPrice)null, this.em);"
        lineNumber: 28
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: "34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(TicketPriceDTO dto) {\n38        TicketPrice entity = dto.fromDTO((TicketPrice)null, this.em);\n39        this.em.persist(entity);\n40        return Response.created(UriBuilder.fromResource(TicketPriceEndpoint.class).path(String.valueOf(entity.getId())).build(new Object[0])).build();\n41     }\n42  \n43     @DELETE\n44     @Path(\"/{id:[0-9][0-9]*}\")\n45     public Response deleteById(@PathParam(\"id\") Long id) {\n46        TicketPrice entity = (TicketPrice)this.em.find(TicketPrice.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  "
        lineNumber: 44
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
        message: ""
        codeSnip: "46        TicketPrice entity = (TicketPrice)this.em.find(TicketPrice.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  \n55     @GET\n56     @Path(\"/{id:[0-9][0-9]*}\")\n57     @Produces({\"application/json\"})\n58     public Response findById(@PathParam(\"id\") Long id) {\n59        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT t FROM TicketPrice t LEFT JOIN FETCH t.show LEFT JOIN FETCH t.section LEFT JOIN FETCH t.ticketCategory WHERE t.id = :entityId ORDER BY t.id\", TicketPrice.class);\n60        findByIdQuery.setParameter(\"entityId\", id);\n61  \n62        TicketPrice entity;\n63        try {\n64           entity = (TicketPrice)findByIdQuery.getSingleResult();\n65        } catch (NoResultException var5) {\n66           entity = null;"
        lineNumber: 56
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/TicketPriceEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: " 93        while(var6.hasNext()) {\n 94           Venue searchResult = (Venue)var6.next();\n 95           VenueDTO dto = new VenueDTO(searchResult);\n 96           results.add(dto);\n 97        }\n 98  \n 99        return results;\n100     }\n101  \n102     @PUT\n103     @Path(\"/{id:[0-9][0-9]*}\")\n104     @Consumes({\"application/json\"})\n105     public Response update(@PathParam(\"id\") Long id, VenueDTO dto) {\n106        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT v FROM Venue v LEFT JOIN FETCH v.sections LEFT JOIN FETCH v.mediaItem WHERE v.id = :entityId ORDER BY v.id\", Venue.class);\n107        findByIdQuery.setParameter(\"entityId\", id);\n108  \n109        Venue entity;\n110        try {\n111           entity = (Venue)findByIdQuery.getSingleResult();\n112        } catch (NoResultException var7) {\n113           entity = null;"
        lineNumber: 103
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Method
          name: PUT
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: "18  import javax.ws.rs.PathParam;\n19  import javax.ws.rs.Produces;\n20  import javax.ws.rs.QueryParam;\n21  import javax.ws.rs.core.Response;\n22  import javax.ws.rs.core.UriBuilder;\n23  import javax.ws.rs.core.Response.Status;\n24  import org.jboss.examples.ticketmonster.model.Venue;\n25  import org.jboss.examples.ticketmonster.rest.dto.VenueDTO;\n26  \n27  @Stateless\n28  @Path(\"forge/venues\")\n29  public class VenueEndpoint {\n30     @PersistenceContext(\n31        unitName = \"primary\"\n32     )\n33     private EntityManager em;\n34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(VenueDTO dto) {\n38        Venue entity = dto.fromDTO((Venue)null, this.em);"
        lineNumber: 28
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Class
          name: Stateless
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: "34  \n35     @POST\n36     @Consumes({\"application/json\"})\n37     public Response create(VenueDTO dto) {\n38        Venue entity = dto.fromDTO((Venue)null, this.em);\n39        this.em.persist(entity);\n40        return Response.created(UriBuilder.fromResource(VenueEndpoint.class).path(String.valueOf(entity.getId())).build(new Object[0])).build();\n41     }\n42  \n43     @DELETE\n44     @Path(\"/{id:[0-9][0-9]*}\")\n45     public Response deleteById(@PathParam(\"id\") Long id) {\n46        Venue entity = (Venue)this.em.find(Venue.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  "
        lineNumber: 44
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Method
          name: DELETE
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
        message: ""
        codeSnip: "46        Venue entity = (Venue)this.em.find(Venue.class, id);\n47        if (entity == null) {\n48           return Response.status(Status.NOT_FOUND).build();\n49        } else {\n50           this.em.remove(entity);\n51           return Response.noContent().build();\n52        }\n53     }\n54  \n55     @GET\n56     @Path(\"/{id:[0-9][0-9]*}\")\n57     @Produces({\"application/json\"})\n58     public Response findById(@PathParam(\"id\") Long id) {\n59        TypedQuery findByIdQuery = this.em.createQuery(\"SELECT DISTINCT v FROM Venue v LEFT JOIN FETCH v.sections LEFT JOIN FETCH v.mediaItem WHERE v.id = :entityId ORDER BY v.id\", Venue.class);\n60        findByIdQuery.setParameter(\"entityId\", id);\n61  \n62        Venue entity;\n63        try {\n64           entity = (Venue)findByIdQuery.getSingleResult();\n65        } catch (NoResultException var5) {\n66           entity = null;"
        lineNumber: 56
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/VenueEndpoint.java
          kind: Method
          name: GET
          package: org.jboss.examples.ticketmonster.rest
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.rest;\n 2  \n 3  import javax.ejb.Stateless;\n 4  import javax.ws.rs.Path;\n 5  import org.jboss.examples.ticketmonster.model.Venue;\n 6  \n 7  @Path(\"/venues\")\n 8  @Stateless\n 9  public class VenueService extends BaseEntityService {\n10     public VenueService() {\n11        super(Venue.class);\n12     }\n13  }\n"
        lineNumber: 7
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/rest/VenueService.java
          kind: Class
          name: Path
          package: org.jboss.examples.ticketmonster.rest
  technology-usage-database-01100:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Java EE=JPA entities
      - tag=Persistence=JPA entities
      - tag=Store=JPA entities
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <persistence version=\"2.0\"\n  3               xmlns=\"http://java.sun.com/xml/ns/persistence\"\n  4               xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  5               xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n  6  \n  7    <persistence-unit name=\"acmeairunit\" >\n  8  \n  9      <jta-data-source>java:comp/env/jdbc/acmeairdatasource</jta-data-source>\n 10  \n 11      <class>com.acmeair.entities.Customer</class>\n 12      <class>com.acmeair.entities.CustomerSession</class>\n 13      <class>com.acmeair.entities.CustomerAddress</class>\n 14      <class>com.acmeair.entities.Flight</class>\n 15      <class>com.acmeair.entities.FlightPK</class>\n 16      <class>com.acmeair.entities.FlightSegment</class>\n 17      <class>com.acmeair.entities.AirportCodeMapping</class>\n 18      <class>com.acmeair.entities.Booking</class>\n 19      <class>com.acmeair.entities.BookingPK</class>\n 20  \n 21      <exclude-unlisted-classes>true</exclude-unlisted-classes>\n 22      <properties>\n 23        <!-- These properties are creating the database on the fly. We are using them to avoid users having\n 24            to create a database to run the sample. \n 25            See also the create=true line in the datasource meta data. -->\n 26        <property name=\"openjpa.jdbc.SynchronizeMappings\"\n 27                  value=\"buildSchema(ForeignKeys=true)\" />\n 28      </properties>\n 29    </persistence-unit>\n 30  \n 31  </persistence>\n"
        lineNumber: 3
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/classes/META-INF/persistence.xml
        message: ""
        codeSnip: "  1  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  2  <persistence version=\"2.0\"\n  3               xmlns=\"http://java.sun.com/xml/ns/persistence\"\n  4               xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  5               xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\">\n  6  \n  7    <persistence-unit name=\"acmeairunit\" >\n  8  \n  9      <jta-data-source>java:comp/env/jdbc/acmeairdatasource</jta-data-source>\n 10  \n 11      <class>com.acmeair.entities.Customer</class>\n 12      <class>com.acmeair.entities.CustomerSession</class>\n 13      <class>com.acmeair.entities.CustomerAddress</class>\n 14      <class>com.acmeair.entities.Flight</class>\n 15      <class>com.acmeair.entities.FlightPK</class>\n 16      <class>com.acmeair.entities.FlightSegment</class>\n 17      <class>com.acmeair.entities.AirportCodeMapping</class>\n 18      <class>com.acmeair.entities.Booking</class>\n 19      <class>com.acmeair.entities.BookingPK</class>\n 20  \n 21      <exclude-unlisted-classes>true</exclude-unlisted-classes>\n 22      <properties>\n 23        <!-- These properties are creating the database on the fly. We are using them to avoid users having\n 24            to create a database to run the sample. \n 25            See also the create=true line in the datasource meta data. -->\n 26        <property name=\"openjpa.jdbc.SynchronizeMappings\"\n 27                  value=\"buildSchema(ForeignKeys=true)\" />\n 28      </properties>\n 29    </persistence-unit>\n 30  \n 31  </persistence>\n"
        lineNumber: 5
        variables:
          matchingText: http://java.sun.com/xml/ns/persistence
  technology-usage-database-01200:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Java EE=JPA named queries
      - tag=Persistence=JPA named queries
      - tag=Store=JPA named queries
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/AirportCodeMapping.java
        message: ""
        codeSnip: " 1  package com.acmeair.entities;\n 2  \n 3  import java.io.Serializable;\n 4  import javax.persistence.Entity;\n 5  import javax.persistence.Id;\n 6  \n 7  @Entity\n 8  public class AirportCodeMapping implements Serializable {\n 9     private static final long serialVersionUID = 1L;\n10     @Id\n11     private String id;\n12     private String airportName;\n13  \n14     public AirportCodeMapping() {\n15     }\n16  \n17     public AirportCodeMapping(String airportCode, String airportName) {"
        lineNumber: 7
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/AirportCodeMapping.java
          kind: Class
          name: Entity
          package: com.acmeair.entities
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/Booking.java
        message: ""
        codeSnip: " 1  package com.acmeair.entities;\n 2  \n 3  import java.io.Serializable;\n 4  import java.util.Date;\n 5  import javax.persistence.EmbeddedId;\n 6  import javax.persistence.Entity;\n 7  import javax.persistence.ManyToOne;\n 8  import javax.persistence.PrimaryKeyJoinColumn;\n 9  \n10  @Entity\n11  public class Booking implements Serializable {\n12     private static final long serialVersionUID = 1L;\n13     @EmbeddedId\n14     private BookingPK pkey;\n15     private FlightPK flightKey;\n16     private Date dateOfBooking;\n17     @ManyToOne\n18     @PrimaryKeyJoinColumn(\n19        name = \"customerId\",\n20        referencedColumnName = \"id\""
        lineNumber: 10
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/Booking.java
          kind: Class
          name: Entity
          package: com.acmeair.entities
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/Customer.java
        message: ""
        codeSnip: " 1  package com.acmeair.entities;\n 2  \n 3  import java.io.Serializable;\n 4  import javax.persistence.Column;\n 5  import javax.persistence.Embedded;\n 6  import javax.persistence.Entity;\n 7  import javax.persistence.Id;\n 8  \n 9  @Entity\n10  public class Customer implements Serializable {\n11     private static final long serialVersionUID = 1L;\n12     @Id\n13     @Column(\n14        columnDefinition = \"VARCHAR\"\n15     )\n16     private String id;\n17     private String password;\n18     private MemberShipStatus status;\n19     private int total_miles;"
        lineNumber: 9
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/Customer.java
          kind: Class
          name: Entity
          package: com.acmeair.entities
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/CustomerSession.java
        message: ""
        codeSnip: " 1  package com.acmeair.entities;\n 2  \n 3  import java.io.Serializable;\n 4  import java.util.Date;\n 5  import javax.persistence.Column;\n 6  import javax.persistence.Entity;\n 7  import javax.persistence.Id;\n 8  \n 9  @Entity\n10  public class CustomerSession implements Serializable {\n11     private static final long serialVersionUID = 1L;\n12     @Id\n13     @Column(\n14        columnDefinition = \"VARCHAR\"\n15     )\n16     private String id;\n17     private String customerid;\n18     private Date lastAccessedTime;\n19     private Date timeoutTime;"
        lineNumber: 9
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/CustomerSession.java
          kind: Class
          name: Entity
          package: com.acmeair.entities
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/Flight.java
        message: ""
        codeSnip: " 1  package com.acmeair.entities;\n 2  \n 3  import java.io.Serializable;\n 4  import java.math.BigDecimal;\n 5  import java.util.Date;\n 6  import javax.persistence.EmbeddedId;\n 7  import javax.persistence.Entity;\n 8  \n 9  @Entity\n10  public class Flight implements Serializable {\n11     private static final long serialVersionUID = 1L;\n12     @EmbeddedId\n13     private FlightPK pkey;\n14     private Date scheduledDepartureTime;\n15     private Date scheduledArrivalTime;\n16     private BigDecimal firstClassBaseCost;\n17     private BigDecimal economyClassBaseCost;\n18     private int numFirstClassSeats;\n19     private int numEconomyClassSeats;"
        lineNumber: 9
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/Flight.java
          kind: Class
          name: Entity
          package: com.acmeair.entities
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/FlightSegment.java
        message: ""
        codeSnip: " 1  package com.acmeair.entities;\n 2  \n 3  import java.io.Serializable;\n 4  import javax.persistence.Entity;\n 5  import javax.persistence.Id;\n 6  \n 7  @Entity\n 8  public class FlightSegment implements Serializable {\n 9     private static final long serialVersionUID = 1L;\n10     @Id\n11     private String id;\n12     private String originPort;\n13     private String destPort;\n14     private int miles;\n15  \n16     public FlightSegment() {\n17     }"
        lineNumber: 7
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/com/acmeair/entities/FlightSegment.java
          kind: Class
          name: Entity
          package: com.acmeair.entities
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
        message: ""
        codeSnip: "12  import javax.persistence.GenerationType;\n13  import javax.persistence.Id;\n14  import javax.persistence.JoinColumn;\n15  import javax.persistence.ManyToOne;\n16  import javax.persistence.OneToMany;\n17  import javax.validation.Valid;\n18  import javax.validation.constraints.NotNull;\n19  import org.hibernate.validator.constraints.Email;\n20  import org.hibernate.validator.constraints.NotEmpty;\n21  \n22  @Entity\n23  public class Booking implements Serializable {\n24     @Id\n25     @GeneratedValue(\n26        strategy = GenerationType.IDENTITY\n27     )\n28     private Long id;\n29     @OneToMany(\n30        fetch = FetchType.EAGER,\n31        cascade = {CascadeType.ALL}\n32     )"
        lineNumber: 22
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Booking.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
        message: ""
        codeSnip: " 3  import java.io.Serializable;\n 4  import javax.persistence.Column;\n 5  import javax.persistence.Entity;\n 6  import javax.persistence.GeneratedValue;\n 7  import javax.persistence.GenerationType;\n 8  import javax.persistence.Id;\n 9  import javax.persistence.ManyToOne;\n10  import javax.validation.constraints.NotNull;\n11  import javax.validation.constraints.Size;\n12  \n13  @Entity\n14  public class Event implements Serializable {\n15     @Id\n16     @GeneratedValue(\n17        strategy = GenerationType.IDENTITY\n18     )\n19     private Long id;\n20     @Column(\n21        unique = true\n22     )\n23     @NotNull"
        lineNumber: 13
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Event.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import java.io.Serializable;\n 4  import javax.persistence.Column;\n 5  import javax.persistence.Entity;\n 6  import javax.persistence.GeneratedValue;\n 7  import javax.persistence.GenerationType;\n 8  import javax.persistence.Id;\n 9  import org.hibernate.validator.constraints.NotEmpty;\n10  \n11  @Entity\n12  public class EventCategory implements Serializable {\n13     @Id\n14     @GeneratedValue(\n15        strategy = GenerationType.IDENTITY\n16     )\n17     private Long id;\n18     @Column(\n19        unique = true\n20     )\n21     @NotEmpty"
        lineNumber: 11
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/EventCategory.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
        message: ""
        codeSnip: " 3  import java.io.Serializable;\n 4  import javax.persistence.Column;\n 5  import javax.persistence.Entity;\n 6  import javax.persistence.EnumType;\n 7  import javax.persistence.Enumerated;\n 8  import javax.persistence.GeneratedValue;\n 9  import javax.persistence.GenerationType;\n10  import javax.persistence.Id;\n11  import org.hibernate.validator.constraints.URL;\n12  \n13  @Entity\n14  public class MediaItem implements Serializable {\n15     @Id\n16     @GeneratedValue(\n17        strategy = GenerationType.IDENTITY\n18     )\n19     private Long id;\n20     @Enumerated(EnumType.STRING)\n21     private MediaType mediaType;\n22     @Column(\n23        unique = true"
        lineNumber: 13
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/MediaItem.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
        codeSnip: " 7  import javax.persistence.GenerationType;\n 8  import javax.persistence.Id;\n 9  import javax.persistence.ManyToOne;\n10  import javax.persistence.Table;\n11  import javax.persistence.Temporal;\n12  import javax.persistence.TemporalType;\n13  import javax.persistence.UniqueConstraint;\n14  import javax.validation.constraints.NotNull;\n15  import org.codehaus.jackson.annotate.JsonIgnoreProperties;\n16  \n17  @Entity\n18  @Table(\n19     uniqueConstraints = {@UniqueConstraint(\n20     columnNames = {\"date\", \"show_id\"}\n21  )}\n22  )\n23  @JsonIgnoreProperties({\"show\"})\n24  public class Performance implements Serializable {\n25     @Id\n26     @GeneratedValue(\n27        strategy = GenerationType.IDENTITY"
        lineNumber: 17
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
        message: ""
        codeSnip: " 8  import javax.persistence.Id;\n 9  import javax.persistence.ManyToOne;\n10  import javax.persistence.Table;\n11  import javax.persistence.Temporal;\n12  import javax.persistence.TemporalType;\n13  import javax.persistence.UniqueConstraint;\n14  import javax.validation.constraints.NotNull;\n15  import org.codehaus.jackson.annotate.JsonIgnoreProperties;\n16  \n17  @Entity\n18  @Table(\n19     uniqueConstraints = {@UniqueConstraint(\n20     columnNames = {\"date\", \"show_id\"}\n21  )}\n22  )\n23  @JsonIgnoreProperties({\"show\"})\n24  public class Performance implements Serializable {\n25     @Id\n26     @GeneratedValue(\n27        strategy = GenerationType.IDENTITY\n28     )"
        lineNumber: 18
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Performance.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
        codeSnip: " 5  import javax.persistence.GeneratedValue;\n 6  import javax.persistence.GenerationType;\n 7  import javax.persistence.Id;\n 8  import javax.persistence.ManyToOne;\n 9  import javax.persistence.Table;\n10  import javax.persistence.UniqueConstraint;\n11  import javax.validation.constraints.NotNull;\n12  import org.codehaus.jackson.annotate.JsonIgnoreProperties;\n13  import org.hibernate.validator.constraints.NotEmpty;\n14  \n15  @Entity\n16  @Table(\n17     uniqueConstraints = {@UniqueConstraint(\n18     columnNames = {\"name\", \"venue_id\"}\n19  )}\n20  )\n21  @JsonIgnoreProperties({\"venue\"})\n22  public class Section implements Serializable {\n23     @Id\n24     @GeneratedValue(\n25        strategy = GenerationType.IDENTITY"
        lineNumber: 15
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
        message: ""
        codeSnip: " 6  import javax.persistence.GenerationType;\n 7  import javax.persistence.Id;\n 8  import javax.persistence.ManyToOne;\n 9  import javax.persistence.Table;\n10  import javax.persistence.UniqueConstraint;\n11  import javax.validation.constraints.NotNull;\n12  import org.codehaus.jackson.annotate.JsonIgnoreProperties;\n13  import org.hibernate.validator.constraints.NotEmpty;\n14  \n15  @Entity\n16  @Table(\n17     uniqueConstraints = {@UniqueConstraint(\n18     columnNames = {\"name\", \"venue_id\"}\n19  )}\n20  )\n21  @JsonIgnoreProperties({\"venue\"})\n22  public class Section implements Serializable {\n23     @Id\n24     @GeneratedValue(\n25        strategy = GenerationType.IDENTITY\n26     )"
        lineNumber: 16
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Section.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
        codeSnip: "10  import javax.persistence.GenerationType;\n11  import javax.persistence.Id;\n12  import javax.persistence.Lob;\n13  import javax.persistence.ManyToOne;\n14  import javax.persistence.PostLoad;\n15  import javax.persistence.Table;\n16  import javax.persistence.UniqueConstraint;\n17  import javax.persistence.Version;\n18  import javax.validation.constraints.NotNull;\n19  \n20  @Entity\n21  @Table(\n22     uniqueConstraints = {@UniqueConstraint(\n23     columnNames = {\"performance_id\", \"section_id\"}\n24  )}\n25  )\n26  public class SectionAllocation implements Serializable {\n27     public static final int EXPIRATION_TIME = 60000;\n28     @Id\n29     @GeneratedValue(\n30        strategy = GenerationType.IDENTITY"
        lineNumber: 20
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
        message: ""
        codeSnip: "11  import javax.persistence.Id;\n12  import javax.persistence.Lob;\n13  import javax.persistence.ManyToOne;\n14  import javax.persistence.PostLoad;\n15  import javax.persistence.Table;\n16  import javax.persistence.UniqueConstraint;\n17  import javax.persistence.Version;\n18  import javax.validation.constraints.NotNull;\n19  \n20  @Entity\n21  @Table(\n22     uniqueConstraints = {@UniqueConstraint(\n23     columnNames = {\"performance_id\", \"section_id\"}\n24  )}\n25  )\n26  public class SectionAllocation implements Serializable {\n27     public static final int EXPIRATION_TIME = 60000;\n28     @Id\n29     @GeneratedValue(\n30        strategy = GenerationType.IDENTITY\n31     )"
        lineNumber: 21
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/SectionAllocation.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
        codeSnip: " 9  import javax.persistence.GeneratedValue;\n10  import javax.persistence.GenerationType;\n11  import javax.persistence.Id;\n12  import javax.persistence.ManyToOne;\n13  import javax.persistence.OneToMany;\n14  import javax.persistence.OrderBy;\n15  import javax.persistence.Table;\n16  import javax.persistence.UniqueConstraint;\n17  import javax.validation.constraints.NotNull;\n18  \n19  @Entity\n20  @Table(\n21     name = \"Appearance\",\n22     uniqueConstraints = {@UniqueConstraint(\n23     columnNames = {\"event_id\", \"venue_id\"}\n24  )}\n25  )\n26  public class Show implements Serializable {\n27     @Id\n28     @GeneratedValue(\n29        strategy = GenerationType.IDENTITY"
        lineNumber: 19
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
        message: ""
        codeSnip: "10  import javax.persistence.GenerationType;\n11  import javax.persistence.Id;\n12  import javax.persistence.ManyToOne;\n13  import javax.persistence.OneToMany;\n14  import javax.persistence.OrderBy;\n15  import javax.persistence.Table;\n16  import javax.persistence.UniqueConstraint;\n17  import javax.validation.constraints.NotNull;\n18  \n19  @Entity\n20  @Table(\n21     name = \"Appearance\",\n22     uniqueConstraints = {@UniqueConstraint(\n23     columnNames = {\"event_id\", \"venue_id\"}\n24  )}\n25  )\n26  public class Show implements Serializable {\n27     @Id\n28     @GeneratedValue(\n29        strategy = GenerationType.IDENTITY\n30     )"
        lineNumber: 20
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Show.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import java.io.Serializable;\n 4  import javax.persistence.Entity;\n 5  import javax.persistence.GeneratedValue;\n 6  import javax.persistence.GenerationType;\n 7  import javax.persistence.Id;\n 8  import javax.persistence.ManyToOne;\n 9  import javax.validation.constraints.NotNull;\n10  \n11  @Entity\n12  public class Ticket implements Serializable {\n13     @Id\n14     @GeneratedValue(\n15        strategy = GenerationType.IDENTITY\n16     )\n17     private Long id;\n18     @NotNull\n19     private Seat seat;\n20     @ManyToOne\n21     @NotNull"
        lineNumber: 11
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Ticket.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
        message: ""
        codeSnip: " 1  package org.jboss.examples.ticketmonster.model;\n 2  \n 3  import java.io.Serializable;\n 4  import javax.persistence.Column;\n 5  import javax.persistence.Entity;\n 6  import javax.persistence.GeneratedValue;\n 7  import javax.persistence.GenerationType;\n 8  import javax.persistence.Id;\n 9  import org.hibernate.validator.constraints.NotEmpty;\n10  \n11  @Entity\n12  public class TicketCategory implements Serializable {\n13     @Id\n14     @GeneratedValue(\n15        strategy = GenerationType.IDENTITY\n16     )\n17     private Long id;\n18     @Column(\n19        unique = true\n20     )\n21     @NotEmpty"
        lineNumber: 11
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/TicketCategory.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
        codeSnip: " 4  import javax.persistence.Entity;\n 5  import javax.persistence.GeneratedValue;\n 6  import javax.persistence.GenerationType;\n 7  import javax.persistence.Id;\n 8  import javax.persistence.ManyToOne;\n 9  import javax.persistence.Table;\n10  import javax.persistence.UniqueConstraint;\n11  import javax.validation.constraints.NotNull;\n12  import org.codehaus.jackson.annotate.JsonIgnoreProperties;\n13  \n14  @Entity\n15  @JsonIgnoreProperties({\"show\"})\n16  @Table(\n17     uniqueConstraints = {@UniqueConstraint(\n18     columnNames = {\"section_id\", \"show_id\", \"ticketcategory_id\"}\n19  )}\n20  )\n21  public class TicketPrice implements Serializable {\n22     @Id\n23     @GeneratedValue(\n24        strategy = GenerationType.IDENTITY"
        lineNumber: 14
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
        message: ""
        codeSnip: " 6  import javax.persistence.GenerationType;\n 7  import javax.persistence.Id;\n 8  import javax.persistence.ManyToOne;\n 9  import javax.persistence.Table;\n10  import javax.persistence.UniqueConstraint;\n11  import javax.validation.constraints.NotNull;\n12  import org.codehaus.jackson.annotate.JsonIgnoreProperties;\n13  \n14  @Entity\n15  @JsonIgnoreProperties({\"show\"})\n16  @Table(\n17     uniqueConstraints = {@UniqueConstraint(\n18     columnNames = {\"section_id\", \"show_id\", \"ticketcategory_id\"}\n19  )}\n20  )\n21  public class TicketPrice implements Serializable {\n22     @Id\n23     @GeneratedValue(\n24        strategy = GenerationType.IDENTITY\n25     )\n26     private Long id;"
        lineNumber: 16
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/TicketPrice.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
        message: ""
        codeSnip: " 7  import javax.persistence.Column;\n 8  import javax.persistence.Entity;\n 9  import javax.persistence.FetchType;\n10  import javax.persistence.GeneratedValue;\n11  import javax.persistence.GenerationType;\n12  import javax.persistence.Id;\n13  import javax.persistence.ManyToOne;\n14  import javax.persistence.OneToMany;\n15  import org.hibernate.validator.constraints.NotEmpty;\n16  \n17  @Entity\n18  public class Venue implements Serializable {\n19     @Id\n20     @GeneratedValue(\n21        strategy = GenerationType.IDENTITY\n22     )\n23     private Long id;\n24     @Column(\n25        unique = true\n26     )\n27     @NotEmpty"
        lineNumber: 17
        variables:
          file: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/java-project/src/main/java/org/jboss/examples/ticketmonster/model/Venue.java
          kind: Class
          name: Entity
          package: org.jboss.examples.ticketmonster.model
  technology-usage-database-01300:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Java EE=Persistence units
      - tag=Persistence=Persistence units
      - tag=Store=Persistence units
    incidents:
      - uri: file:///opt/input/source/acmeair-webapp-1.0-SNAPSHOT.war/acmeair-webapp-1-0-SNAPSHOT-war-exploded/WEB-INF/classes/META-INF/persistence.xml
        message: ""
  technology-usage-ejb-01400:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Execute=EJB Timer
      - tag=Java EE=EJB Timer
      - tag=Processing=EJB Timer
    incidents:
      - uri: ""
        message: ""
        variables:
          tags:
            - EJB Timer
  technology-usage-embedded-framework-02200:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded=AspectJ
      - tag=Execute=AspectJ
      - tag=Inversion of Control=AspectJ
    incidents:
      - uri: ""
        message: ""
        variables:
          tags:
            - AspectJ
  technology-usage-embedded-framework-04700:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded=AOP Alliance
      - tag=Execute=AOP Alliance
      - tag=Inversion of Control=AOP Alliance
    incidents:
      - uri: ""
        message: ""
        variables:
          tags:
            - AOP Alliance
  technology-usage-embedded-framework-05900:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded=GIN
      - tag=Execute=GIN
      - tag=Inversion of Control=GIN
    incidents:
      - uri: ""
        message: ""
        variables:
          tags:
            - GIN
  technology-usage-embedded-framework-08200:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded=Spring DI
      - tag=Execute=Spring DI
      - tag=Inversion of Control=Spring DI
    incidents:
      - uri: ""
        message: ""
        variables:
          tags:
            - Spring DI
  technology-usage-embedded-framework-08400:
    description: ""
    labels:
      - discovery
      - konveyor.io/include=always
      - tag=Embedded=Spring Web
      - tag=View=Spring Web
      - tag=Web=Spring Web
    incidents:
      - uri: ""
        message: ""
        variables:
          tags:
            - Spring Web
violations: []
